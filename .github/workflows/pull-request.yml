name: Pull request
on:
  pull_request:
    branches:
      - master
jobs:
  preview:
    # Only run this job for events that originate on this repository and if the automation/merge label is not applied to the PR.
    # PRs with the automation/tfgen-provider-docs label contain only metadata file changes and don't need a PR build.
    if: github.event.pull_request.head.repo.full_name == github.repository && contains(github.event.pull_request.labels.*.name, 'automation/tfgen-provider-docs') != true
    name: Build and deploy preview
    runs-on: ubuntu-22.04-8core
    environment: testing
    env:
      GOPATH: ${{ github.workspace }}/go
    steps:
      - name: Install Node
        uses: actions/setup-node@v1
        with:
          node-version: '18.x'

      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.20.x

      - name: Install Hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: '0.111.0'
          extended: true

      - name: Check out branch
        uses: actions/checkout@v2

      - name: Validate JSON file syntax
        uses: limitusus/json-syntax-check@v2
        with:
          pattern: "community-packages/package-list.json"

      - name: Lint
        run: |
          yarn install
          make lint

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2
          role-to-assume: ${{ secrets.AWS_CI_ROLE_ARN }}
          role-session-name: PullRequestPreviewSession

      - name: Build and deploy preview
        run: make ci-pull-request
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
          PULUMI_STACK_NAME: ${{ vars.PULUMI_STACK_NAME }}
          NODE_OPTIONS: "--max_old_space_size=8192"

  notify:
    if: (github.event.pull_request.user.login == 'pulumi-bot') && failure()
    name: Send slack notification
    runs-on: ubuntu-latest
    needs: [preview]
    steps:
      - name: Slack Notification
        uses: docker://sholung/action-slack-notify:v2.3.0
        env:
          SLACK_CHANNEL: docs-ops
          SLACK_COLOR: "#F54242"
          SLACK_MESSAGE: "pull request build failure in pulumi/registry repo :meow_sad:"
          SLACK_USERNAME: docsbot
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_ICON: https://www.pulumi.com/logos/brand/avatar-on-white.png
