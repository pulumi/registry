env:
  ESC_ACTION_OIDC_AUTH: true
  ESC_ACTION_OIDC_ORGANIZATION: pulumi
  ESC_ACTION_OIDC_REQUESTED_TOKEN_TYPE: urn:pulumi:token-type:access_token:organization
  ESC_ACTION_ENVIRONMENT: github-secrets/pulumi-registry
  ESC_ACTION_EXPORT_ENVIRONMENT_VARIABLES: false
name: Build and deploy
on:
  push:
    branches:
      - master
permissions:
  id-token: write # This is required for requesting the JWT
  contents: read # This is required for actions/checkout
jobs:
  build:
    name: Build
    env:
      GOPATH: ${{ github.workspace }}/go
    runs-on: pulumi-service-ubuntu-24.04-16core
    environment: production
    steps:
      - name: Fetch secrets from ESC
        id: esc-secrets
        uses: pulumi/esc-action@cf5b30703ffd5ad60cc3a880c09b3a9592b9372d # v1
      - name: Install Node
        uses: actions/setup-node@v4
        with:
          node-version: "18.x"

      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.23.x

      - name: Install Hugo
        uses: peaceiris/actions-hugo@v3
        with:
          hugo-version: "0.135.0"
          extended: true

      - name: Check out branch
        uses: actions/checkout@v4
        with:
          token: ${{ steps.esc-secrets.outputs.PULUMI_BOT_TOKEN }}

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::388588623842:role/ContinuousDelivery
          role-session-name: docs-deploy
          role-duration-seconds: 7200
          aws-region: us-west-2

      - name: Install Pulumi CLI
        uses: pulumi/actions@df5a93ad715135263c732ba288301bd044c383c0 # v6

      - name: Build and deploy
        run: make ci_push
        env:
          PULUMI_ACCESS_TOKEN: ${{ steps.esc-secrets.outputs.PULUMI_ACCESS_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ALGOLIA_APP_ID: ${{ vars.ALGOLIA_APP_ID }}
          ALGOLIA_APP_SEARCH_KEY: ${{ vars.ALGOLIA_APP_SEARCH_KEY }}
          ALGOLIA_APP_ADMIN_KEY: ${{  steps.esc-secrets.outputs.ALGOLIA_APP_ADMIN_KEY }}
          PULUMI_STACK_NAME: ${{ vars.PULUMI_STACK_NAME }}
          PULUMI_DOCS_STACK_NAME: ${{ vars.PULUMI_DOCS_STACK_NAME }}
          DEPLOYMENT_ENVIRONMENT: ${{ vars.DEPLOYMENT_ENVIRONMENT }}
          NODE_OPTIONS: "--max_old_space_size=8192"

      - name: Archive bucket metadata
        uses: actions/upload-artifact@v4
        with:
          name: origin-bucket-metadata
          path: origin-bucket-metadata.json
      - name: Install uv
        uses: astral-sh/setup-uv@v5
      - name: Push to the Live Registry
        run: uv run --with requests,pyyaml ./scripts/ci/push-registry.py
        env:
          PULUMI_ACCESS_TOKEN: ${{ steps.esc-secrets.outputs.PULUMI_ACCESS_TOKEN }}

  notify:
    if: failure()
    name: Send slack notification
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Fetch secrets from ESC
        id: esc-secrets
        uses: pulumi/esc-action@cf5b30703ffd5ad60cc3a880c09b3a9592b9372d # v1
      - name: Slack Notification
        uses: docker://sholung/action-slack-notify:v2.3.0
        env:
          SLACK_CHANNEL: registry-ops
          SLACK_COLOR: "#F54242"
          SLACK_MESSAGE: "build and deploy failure in pulumi/registry repo :meow_sad:"
          SLACK_USERNAME: registrybot
          SLACK_WEBHOOK: ${{ steps.esc-secrets.outputs.SLACK_WEBHOOK_URL }}
          SLACK_ICON: https://www.pulumi.com/logos/brand/avatar-on-white.png
