
---
title: "RestAPI"
title_tag: "aws-apigateway.RestAPI"
meta_desc: "Documentation for the aws-apigateway.RestAPI resource with examples, input properties, output properties, lookup functions, and supporting types."
layout: api
no_edit_this_page: true
---



<!-- WARNING: this file was generated by Pulumi Docs Generator. -->
<!-- Do not edit by hand unless you're certain you know what you are doing! -->

The RestAPI component offers a simple interface for creating a fully functional API Gateway REST API. The
REST API can define any number of routes, each of which maps a path and HTTP method to one of (1) an event
hander route that invokes a Lambda Function (2) a local path route which uploads local files into an S3 bucket
and serves them or (3) an integration target such as an HTTP proxy or service integration.




## Create RestAPI Resource {#create}

Resources are created with functions called constructors. To learn more about declaring and configuring resources, see [Resources](/docs/concepts/resources/).

### Constructor syntax
<div>
<pulumi-chooser type="language" options="csharp,go,typescript,python,yaml,java"></pulumi-chooser>
</div>


<div>
<pulumi-choosable type="language" values="javascript,typescript">
<div class="no-copy"><div class="highlight"><pre class="chroma"><code class="language-typescript" data-lang="typescript"><span class="k">new </span><span class="nx">RestAPI</span><span class="p">(</span><span class="nx">name</span><span class="p">:</span> <span class="nx">string</span><span class="p">,</span> <span class="nx">args</span><span class="p">?:</span> <span class="nx"><a href="#inputs">RestAPIArgs</a></span><span class="p">,</span> <span class="nx">opts</span><span class="p">?:</span> <span class="nx"><a href="/docs/reference/pkg/nodejs/pulumi/pulumi/#ComponentResourceOptions">ComponentResourceOptions</a></span><span class="p">);</span></code></pre></div>
</div></pulumi-choosable>
</div>

<div>
<pulumi-choosable type="language" values="python">
<div class="no-copy"><div class="highlight"><pre class="chroma"><code class="language-python" data-lang="python"><span class=nd>@overload</span>
<span class="k">def </span><span class="nx">RestAPI</span><span class="p">(</span><span class="nx">resource_name</span><span class="p">:</span> <span class="nx">str</span><span class="p">,</span>
            <span class="nx">args</span><span class="p">:</span> <span class="nx"><a href="#inputs">Optional[RestAPIArgs]</a></span> = None<span class="p">,</span>
            <span class="nx">opts</span><span class="p">:</span> <span class="nx"><a href="/docs/reference/pkg/python/pulumi/#pulumi.ResourceOptions">Optional[ResourceOptions]</a></span> = None<span class="p">)</span>
<span></span>
<span class=nd>@overload</span>
<span class="k">def </span><span class="nx">RestAPI</span><span class="p">(</span><span class="nx">resource_name</span><span class="p">:</span> <span class="nx">str</span><span class="p">,</span>
            <span class="nx">opts</span><span class="p">:</span> <span class="nx"><a href="/docs/reference/pkg/python/pulumi/#pulumi.ResourceOptions">Optional[ResourceOptions]</a></span> = None<span class="p">,</span>
            <span class="nx">api_key_source</span><span class="p">:</span> <span class="nx">Optional[APIKeySource]</span> = None<span class="p">,</span>
            <span class="nx">binary_media_types</span><span class="p">:</span> <span class="nx">Optional[Sequence[str]]</span> = None<span class="p">,</span>
            <span class="nx">description</span><span class="p">:</span> <span class="nx">Optional[str]</span> = None<span class="p">,</span>
            <span class="nx">disable_execute_api_endpoint</span><span class="p">:</span> <span class="nx">Optional[bool]</span> = None<span class="p">,</span>
            <span class="nx">gateway_responses</span><span class="p">:</span> <span class="nx">Optional[Mapping[str, SwaggerGatewayResponseArgs]]</span> = None<span class="p">,</span>
            <span class="nx">request_validator</span><span class="p">:</span> <span class="nx">Optional[RequestValidator]</span> = None<span class="p">,</span>
            <span class="nx">routes</span><span class="p">:</span> <span class="nx">Optional[Sequence[RouteArgs]]</span> = None<span class="p">,</span>
            <span class="nx">stage_name</span><span class="p">:</span> <span class="nx">Optional[str]</span> = None<span class="p">,</span>
            <span class="nx">static_routes_bucket</span><span class="p">:</span> <span class="nx">Optional[pulumi_aws.s3.Bucket]</span> = None<span class="p">,</span>
            <span class="nx">swagger_string</span><span class="p">:</span> <span class="nx">Optional[str]</span> = None<span class="p">,</span>
            <span class="nx">tags</span><span class="p">:</span> <span class="nx">Optional[Mapping[str, str]]</span> = None<span class="p">)</span></code></pre></div>
</div></pulumi-choosable>
</div>

<div>
<pulumi-choosable type="language" values="go">
<div class="no-copy"><div class="highlight"><pre class="chroma"><code class="language-go" data-lang="go"><span class="k">func </span><span class="nx">NewRestAPI</span><span class="p">(</span><span class="nx">ctx</span><span class="p"> *</span><span class="nx"><a href="https://pkg.go.dev/github.com/pulumi/pulumi/sdk/v3/go/pulumi?tab=doc#Context">Context</a></span><span class="p">,</span> <span class="nx">name</span><span class="p"> </span><span class="nx">string</span><span class="p">,</span> <span class="nx">args</span><span class="p"> *</span><span class="nx"><a href="#inputs">RestAPIArgs</a></span><span class="p">,</span> <span class="nx">opts</span><span class="p"> ...</span><span class="nx"><a href="https://pkg.go.dev/github.com/pulumi/pulumi/sdk/v3/go/pulumi?tab=doc#ResourceOption">ResourceOption</a></span><span class="p">) (*<span class="nx">RestAPI</span>, error)</span></code></pre></div>
</div></pulumi-choosable>
</div>

<div>
<pulumi-choosable type="language" values="csharp">
<div class="no-copy"><div class="highlight"><pre class="chroma"><code class="language-csharp" data-lang="csharp"><span class="k">public </span><span class="nx">RestAPI</span><span class="p">(</span><span class="nx">string</span><span class="p"> </span><span class="nx">name<span class="p">,</span> <span class="nx"><a href="#inputs">RestAPIArgs</a></span><span class="p">? </span><span class="nx">args = null<span class="p">,</span> <span class="nx"><a href="/docs/reference/pkg/dotnet/Pulumi/Pulumi.ComponentResourceOptions.html">ComponentResourceOptions</a></span><span class="p">? </span><span class="nx">opts = null<span class="p">)</span></code></pre></div>
</div></pulumi-choosable>
</div>

<div>
<pulumi-choosable type="language" values="java">
<div class="no-copy"><div class="highlight"><pre class="chroma">
<code class="language-java" data-lang="java"><span class="k">public </span><span class="nx">RestAPI</span><span class="p">(</span><span class="nx">String</span><span class="p"> </span><span class="nx">name<span class="p">,</span> <span class="nx"><a href="#inputs">RestAPIArgs</a></span><span class="p"> </span><span class="nx">args<span class="p">)</span>
<span class="k">public </span><span class="nx">RestAPI</span><span class="p">(</span><span class="nx">String</span><span class="p"> </span><span class="nx">name<span class="p">,</span> <span class="nx"><a href="#inputs">RestAPIArgs</a></span><span class="p"> </span><span class="nx">args<span class="p">,</span> <span class="nx">ComponentResourceOptions</span><span class="p"> </span><span class="nx">options<span class="p">)</span>
</code></pre></div></div>
</pulumi-choosable>
</div>

<div>
<pulumi-choosable type="language" values="yaml">
<div class="no-copy"><div class="highlight"><pre class="chroma"><code class="language-yaml" data-lang="yaml">type: <span class="nx">aws-apigateway:RestAPI</span><span class="p"></span>
<span class="p">properties</span><span class="p">: </span><span class="c">#&nbsp;The arguments to resource properties.</span>
<span class="p"></span><span class="p">options</span><span class="p">: </span><span class="c">#&nbsp;Bag of options to control resource&#39;s behavior.</span>
<span class="p"></span>
</code></pre></div></div>
</pulumi-choosable>
</div>

#### Parameters

<div>
<pulumi-choosable type="language" values="javascript,typescript">

<dl class="resources-properties"><dt
        class="property-required" title="Required">
        <span>name</span>
        <span class="property-indicator"></span>
        <span class="property-type">string</span>
    </dt>
    <dd>The unique name of the resource.</dd><dt
        class="property-optional" title="Optional">
        <span>args</span>
        <span class="property-indicator"></span>
        <span class="property-type"><a href="#inputs">RestAPIArgs</a></span>
    </dt>
    <dd>The arguments to resource properties.</dd><dt
        class="property-optional" title="Optional">
        <span>opts</span>
        <span class="property-indicator"></span>
        <span class="property-type"><a href="/docs/reference/pkg/nodejs/pulumi/pulumi/#ComponentResourceOptions">ComponentResourceOptions</a></span>
    </dt>
    <dd>Bag of options to control resource&#39;s behavior.</dd></dl>

</pulumi-choosable>
</div>

<div>
<pulumi-choosable type="language" values="python">

<dl class="resources-properties"><dt
        class="property-required" title="Required">
        <span>resource_name</span>
        <span class="property-indicator"></span>
        <span class="property-type">str</span>
    </dt>
    <dd>The unique name of the resource.</dd><dt
        class="property-optional" title="Optional">
        <span>args</span>
        <span class="property-indicator"></span>
        <span class="property-type"><a href="#inputs">RestAPIArgs</a></span>
    </dt>
    <dd>The arguments to resource properties.</dd><dt
        class="property-optional" title="Optional">
        <span>opts</span>
        <span class="property-indicator"></span>
        <span class="property-type"><a href="/docs/reference/pkg/python/pulumi/#pulumi.ResourceOptions">ResourceOptions</a></span>
    </dt>
    <dd>Bag of options to control resource&#39;s behavior.</dd></dl>

</pulumi-choosable>
</div>

<div>
<pulumi-choosable type="language" values="go">

<dl class="resources-properties"><dt
        class="property-optional" title="Optional">
        <span>ctx</span>
        <span class="property-indicator"></span>
        <span class="property-type"><a href="https://pkg.go.dev/github.com/pulumi/pulumi/sdk/v3/go/pulumi?tab=doc#Context">Context</a></span>
    </dt>
    <dd>Context object for the current deployment.</dd><dt
        class="property-required" title="Required">
        <span>name</span>
        <span class="property-indicator"></span>
        <span class="property-type">string</span>
    </dt>
    <dd>The unique name of the resource.</dd><dt
        class="property-optional" title="Optional">
        <span>args</span>
        <span class="property-indicator"></span>
        <span class="property-type"><a href="#inputs">RestAPIArgs</a></span>
    </dt>
    <dd>The arguments to resource properties.</dd><dt
        class="property-optional" title="Optional">
        <span>opts</span>
        <span class="property-indicator"></span>
        <span class="property-type"><a href="https://pkg.go.dev/github.com/pulumi/pulumi/sdk/v3/go/pulumi?tab=doc#ResourceOption">ResourceOption</a></span>
    </dt>
    <dd>Bag of options to control resource&#39;s behavior.</dd></dl>

</pulumi-choosable>
</div>

<div>
<pulumi-choosable type="language" values="csharp">

<dl class="resources-properties"><dt
        class="property-required" title="Required">
        <span>name</span>
        <span class="property-indicator"></span>
        <span class="property-type">string</span>
    </dt>
    <dd>The unique name of the resource.</dd><dt
        class="property-optional" title="Optional">
        <span>args</span>
        <span class="property-indicator"></span>
        <span class="property-type"><a href="#inputs">RestAPIArgs</a></span>
    </dt>
    <dd>The arguments to resource properties.</dd><dt
        class="property-optional" title="Optional">
        <span>opts</span>
        <span class="property-indicator"></span>
        <span class="property-type"><a href="/docs/reference/pkg/dotnet/Pulumi/Pulumi.ComponentResourceOptions.html">ComponentResourceOptions</a></span>
    </dt>
    <dd>Bag of options to control resource&#39;s behavior.</dd></dl>

</pulumi-choosable>
</div>

<div>
<pulumi-choosable type="language" values="java">

<dl class="resources-properties"><dt
        class="property-required" title="Required">
        <span>name</span>
        <span class="property-indicator"></span>
        <span class="property-type">String</span>
    </dt>
    <dd>The unique name of the resource.</dd><dt
        class="property-required" title="Required">
        <span>args</span>
        <span class="property-indicator"></span>
        <span class="property-type"><a href="#inputs">RestAPIArgs</a></span>
    </dt>
    <dd>The arguments to resource properties.</dd><dt
        class="property-optional" title="Optional">
        <span>options</span>
        <span class="property-indicator"></span>
        <span class="property-type">ComponentResourceOptions</span>
    </dt>
    <dd>Bag of options to control resource&#39;s behavior.</dd></dl>

</pulumi-choosable>
</div>



### Constructor example

The following reference example uses placeholder values for all [input properties](#inputs).
<div>
<pulumi-chooser type="language" options="csharp,go,typescript,python,yaml,java"></pulumi-chooser>
</div>


<div>
<pulumi-choosable type="language" values="csharp">

```csharp
var restAPIResource = new AwsApiGateway.RestAPI("restAPIResource", new()
{
    ApiKeySource = AwsApiGateway.APIKeySource.HEADER,
    BinaryMediaTypes = new()
    {
        "string",
    },
    Description = "string",
    DisableExecuteApiEndpoint = false,
    GatewayResponses = 
    {
        { "string", new AwsApiGateway.Inputs.SwaggerGatewayResponseArgs
        {
            ResponseParameters = 
            {
                { "string", "string" },
            },
            ResponseTemplates = 
            {
                { "string", "string" },
            },
            StatusCode = 0,
        } },
    },
    RequestValidator = AwsApiGateway.RequestValidator.ALL,
    Routes = new()
    {
        new AwsApiGateway.Inputs.RouteArgs
        {
            Path = "string",
            Data = "any",
            ContentType = "string",
            ApiKeyRequired = false,
            EventHandler = function,
            IamAuthEnabled = false,
            Index = "string",
            LocalPath = "string",
            Method = AwsApiGateway.Method.ANY,
            Authorizers = new()
            {
                new AwsApiGateway.Inputs.AuthorizerArgs
                {
                    ParameterName = "string",
                    AuthType = "string",
                    AuthorizerName = "string",
                    AuthorizerResultTtlInSeconds = 0,
                    Handler = function,
                    IdentitySource = new()
                    {
                        "string",
                    },
                    IdentityValidationExpression = "string",
                    MethodsToAuthorize = new()
                    {
                        "string",
                    },
                    ParameterLocation = "string",
                    ProviderARNs = new()
                    {
                        "string",
                    },
                    Type = "string",
                },
            },
            RequestValidator = AwsApiGateway.RequestValidator.ALL,
            RequiredParameters = new()
            {
                new AwsApiGateway.Inputs.RequiredParameterArgs
                {
                    In = "string",
                    Name = "string",
                },
            },
            Target = new AwsApiGateway.Inputs.TargetArgs
            {
                Type = AwsApiGateway.IntegrationType.Aws,
                ConnectionId = "string",
                ConnectionType = AwsApiGateway.IntegrationConnectionType.INTERNET,
                HttpMethod = "ANY",
                PassthroughBehaviour = AwsApiGateway.IntegrationPassthroughBehavior.When_no_match,
                Uri = "string",
            },
        },
    },
    StageName = "string",
    StaticRoutesBucket = bucket,
    SwaggerString = "string",
    Tags = 
    {
        { "string", "string" },
    },
});
```

</pulumi-choosable>
</div>


<div>
<pulumi-choosable type="language" values="go">

```go
example, err := awsapigateway.NewRestAPI(ctx, "restAPIResource", &awsapigateway.RestAPIArgs{
	ApiKeySource: awsapigateway.APIKeySourceHEADER,
	BinaryMediaTypes: []pulumi.String{
		pulumi.String("string"),
	},
	Description:               pulumi.String("string"),
	DisableExecuteApiEndpoint: pulumi.Bool(false),
	GatewayResponses: map[string]apigateway.SwaggerGatewayResponseArgs{
		"string": &apigateway.SwaggerGatewayResponseArgs{
			ResponseParameters: pulumi.StringMap{
				"string": pulumi.String("string"),
			},
			ResponseTemplates: pulumi.StringMap{
				"string": pulumi.String("string"),
			},
			StatusCode: pulumi.Float64(0),
		},
	},
	RequestValidator: awsapigateway.RequestValidatorALL,
	Routes: []apigateway.RouteArgs{
		{
			Path:           "string",
			Data:           "any",
			ContentType:    "string",
			ApiKeyRequired: false,
			EventHandler:   pulumi.Any(function),
			IamAuthEnabled: false,
			Index:          "string",
			LocalPath:      "string",
			Method:         awsapigateway.MethodANY,
			Authorizers: []apigateway.AuthorizerArgs{
				{
					ParameterName:                "string",
					AuthType:                     "string",
					AuthorizerName:               "string",
					AuthorizerResultTtlInSeconds: 0,
					Handler:                      pulumi.Any(function),
					IdentitySource: []string{
						"string",
					},
					IdentityValidationExpression: "string",
					MethodsToAuthorize: []string{
						"string",
					},
					ParameterLocation: "string",
					ProviderARNs: []pulumi.String{
						pulumi.String("string"),
					},
					Type: "string",
				},
			},
			RequestValidator: awsapigateway.RequestValidatorALL,
			RequiredParameters: []apigateway.RequiredParameterArgs{
				{
					In:   pulumi.String("string"),
					Name: pulumi.String("string"),
				},
			},
			Target: {
				Type:                 awsapigateway.IntegrationTypeAws,
				ConnectionId:         pulumi.String("string"),
				ConnectionType:       awsapigateway.IntegrationConnectionTypeINTERNET,
				HttpMethod:           pulumi.String("ANY"),
				PassthroughBehaviour: awsapigateway.IntegrationPassthroughBehavior_When_no_match,
				Uri:                  pulumi.String("string"),
			},
		},
	},
	StageName:          pulumi.String("string"),
	StaticRoutesBucket: pulumi.Any(bucket),
	SwaggerString:      pulumi.String("string"),
	Tags: pulumi.StringMap{
		"string": pulumi.String("string"),
	},
})
```

</pulumi-choosable>
</div>


<div>
<pulumi-choosable type="language" values="java">

```java
var restAPIResource = new RestAPI("restAPIResource", RestAPIArgs.builder()
    .apiKeySource("HEADER")
    .binaryMediaTypes("string")
    .description("string")
    .disableExecuteApiEndpoint(false)
    .gatewayResponses(Map.of("string", Map.ofEntries(
        Map.entry("responseParameters", Map.of("string", "string")),
        Map.entry("responseTemplates", Map.of("string", "string")),
        Map.entry("statusCode", 0)
    )))
    .requestValidator("ALL")
    .routes(RouteArgs.builder()
        .path("string")
        .data("any")
        .contentType("string")
        .apiKeyRequired(false)
        .eventHandler(function)
        .iamAuthEnabled(false)
        .index("string")
        .localPath("string")
        .method("ANY")
        .authorizers(AuthorizerArgs.builder()
            .parameterName("string")
            .authType("string")
            .authorizerName("string")
            .authorizerResultTtlInSeconds(0)
            .handler(function)
            .identitySource("string")
            .identityValidationExpression("string")
            .methodsToAuthorize("string")
            .parameterLocation("string")
            .providerARNs("string")
            .type("string")
            .build())
        .requestValidator("ALL")
        .requiredParameters(RequiredParameterArgs.builder()
            .in("string")
            .name("string")
            .build())
        .target(TargetArgs.builder()
            .type("aws")
            .connectionId("string")
            .connectionType("INTERNET")
            .httpMethod("ANY")
            .passthroughBehaviour("when_no_match")
            .uri("string")
            .build())
        .build())
    .stageName("string")
    .staticRoutesBucket(bucket)
    .swaggerString("string")
    .tags(Map.of("string", "string"))
    .build());
```

</pulumi-choosable>
</div>


<div>
<pulumi-choosable type="language" values="python">

```python
rest_api_resource = aws_apigateway.RestAPI("restAPIResource",
    api_key_source=aws_apigateway.APIKeySource.HEADER,
    binary_media_types=["string"],
    description="string",
    disable_execute_api_endpoint=False,
    gateway_responses={
        "string": {
            "response_parameters": {
                "string": "string",
            },
            "response_templates": {
                "string": "string",
            },
            "status_code": 0,
        },
    },
    request_validator=aws_apigateway.RequestValidator.ALL,
    routes=[{
        "path": "string",
        "data": "any",
        "content_type": "string",
        "api_key_required": False,
        "event_handler": function,
        "iam_auth_enabled": False,
        "index": "string",
        "local_path": "string",
        "method": aws_apigateway.Method.ANY,
        "authorizers": [{
            "parameter_name": "string",
            "auth_type": "string",
            "authorizer_name": "string",
            "authorizer_result_ttl_in_seconds": 0,
            "handler": function,
            "identity_source": ["string"],
            "identity_validation_expression": "string",
            "methods_to_authorize": ["string"],
            "parameter_location": "string",
            "provider_arns": ["string"],
            "type": "string",
        }],
        "request_validator": aws_apigateway.RequestValidator.ALL,
        "required_parameters": [{
            "in_": "string",
            "name": "string",
        }],
        "target": {
            "type": aws_apigateway.IntegrationType.AWS,
            "connection_id": "string",
            "connection_type": aws_apigateway.IntegrationConnectionType.INTERNET,
            "http_method": "ANY",
            "passthrough_behaviour": aws_apigateway.IntegrationPassthroughBehavior.WHEN_NO_MATCH,
            "uri": "string",
        },
    }],
    stage_name="string",
    static_routes_bucket=bucket,
    swagger_string="string",
    tags={
        "string": "string",
    })
```

</pulumi-choosable>
</div>


<div>
<pulumi-choosable type="language" values="typescript">

```typescript
const restAPIResource = new aws_apigateway.RestAPI("restAPIResource", {
    apiKeySource: aws_apigateway.APIKeySource.HEADER,
    binaryMediaTypes: ["string"],
    description: "string",
    disableExecuteApiEndpoint: false,
    gatewayResponses: {
        string: {
            responseParameters: {
                string: "string",
            },
            responseTemplates: {
                string: "string",
            },
            statusCode: 0,
        },
    },
    requestValidator: aws_apigateway.RequestValidator.ALL,
    routes: [{
        path: "string",
        data: "any",
        contentType: "string",
        apiKeyRequired: false,
        eventHandler: _function,
        iamAuthEnabled: false,
        index: "string",
        localPath: "string",
        method: aws_apigateway.Method.ANY,
        authorizers: [{
            parameterName: "string",
            authType: "string",
            authorizerName: "string",
            authorizerResultTtlInSeconds: 0,
            handler: _function,
            identitySource: ["string"],
            identityValidationExpression: "string",
            methodsToAuthorize: ["string"],
            parameterLocation: "string",
            providerARNs: ["string"],
            type: "string",
        }],
        requestValidator: aws_apigateway.RequestValidator.ALL,
        requiredParameters: [{
            "in": "string",
            name: "string",
        }],
        target: {
            type: aws_apigateway.IntegrationType.Aws,
            connectionId: "string",
            connectionType: aws_apigateway.IntegrationConnectionType.INTERNET,
            httpMethod: "ANY",
            passthroughBehaviour: aws_apigateway.IntegrationPassthroughBehavior.When_no_match,
            uri: "string",
        },
    }],
    stageName: "string",
    staticRoutesBucket: bucket,
    swaggerString: "string",
    tags: {
        string: "string",
    },
});
```

</pulumi-choosable>
</div>


<div>
<pulumi-choosable type="language" values="yaml">

```yaml
type: aws-apigateway:RestAPI
properties:
    apiKeySource: HEADER
    binaryMediaTypes:
        - string
    description: string
    disableExecuteApiEndpoint: false
    gatewayResponses:
        string:
            responseParameters:
                string: string
            responseTemplates:
                string: string
            statusCode: 0
    requestValidator: ALL
    routes:
        - apiKeyRequired: false
          authorizers:
            - authType: string
              authorizerName: string
              authorizerResultTtlInSeconds: 0
              handler: ${function}
              identitySource:
                - string
              identityValidationExpression: string
              methodsToAuthorize:
                - string
              parameterLocation: string
              parameterName: string
              providerARNs:
                - string
              type: string
          contentType: string
          data: any
          eventHandler: ${function}
          iamAuthEnabled: false
          index: string
          localPath: string
          method: ANY
          path: string
          requestValidator: ALL
          requiredParameters:
            - in: string
              name: string
          target:
            connectionId: string
            connectionType: INTERNET
            httpMethod: ANY
            passthroughBehaviour: when_no_match
            type: aws
            uri: string
    stageName: string
    staticRoutesBucket: ${bucket}
    swaggerString: string
    tags:
        string: string
```

</pulumi-choosable>
</div>



## RestAPI Resource Properties {#properties}

To learn more about resource properties and how to use them, see [Inputs and Outputs](/docs/intro/concepts/inputs-outputs) in the Architecture and Concepts docs.

### Inputs

<pulumi-choosable type="language" values="python">
<p>
In Python, inputs that are objects can be passed either as <a href="/docs/languages-sdks/python/#inputs-and-outputs">argument classes or as dictionary literals</a>.
</p>
</pulumi-choosable>

The RestAPI resource accepts the following [input](/docs/intro/concepts/inputs-outputs) properties:



<div>
<pulumi-choosable type="language" values="csharp">
<dl class="resources-properties"><dt class="property-optional"
            title="Optional">
        <span id="apikeysource_csharp">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#apikeysource_csharp" style="color: inherit; text-decoration: inherit;">Api<wbr>Key<wbr>Source</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type"><a href="#apikeysource">Pulumi.<wbr>Aws<wbr>Api<wbr>Gateway.<wbr>APIKey<wbr>Source</a></span>
    </dt>
    <dd>The source for the apikey. This can either be a HEADER or AUTHORIZER. If <code>apiKeyRequired</code> is
set to true on a route, and this is not defined the value will default to HEADER.</dd><dt class="property-optional"
            title="Optional">
        <span id="binarymediatypes_csharp">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#binarymediatypes_csharp" style="color: inherit; text-decoration: inherit;">Binary<wbr>Media<wbr>Types</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">List&lt;string&gt;</span>
    </dt>
    <dd>List of binary media types supported by the REST API. By default, the REST API supports only UTF-8-encoded text payloads.
If importing an OpenAPI specification via the body argument, this corresponds to the x-amazon-apigateway-binary-media-types extension.
If the argument value is provided and is different than the OpenAPI value, the argument value will override the OpenAPI value.</dd><dt class="property-optional"
            title="Optional">
        <span id="description_csharp">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#description_csharp" style="color: inherit; text-decoration: inherit;">Description</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">string</span>
    </dt>
    <dd>Description of the REST API.</dd><dt class="property-optional"
            title="Optional">
        <span id="disableexecuteapiendpoint_csharp">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#disableexecuteapiendpoint_csharp" style="color: inherit; text-decoration: inherit;">Disable<wbr>Execute<wbr>Api<wbr>Endpoint</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">bool</span>
    </dt>
    <dd>Whether clients can invoke your API by using the default execute-api endpoint. By default, clients can invoke
your API with the default https://{api_id}.execute-api.{region}.amazonaws.com endpoint. To require that
clients use a custom domain name to invoke your API, disable the default endpoint. Defaults to false.</dd><dt class="property-optional"
            title="Optional">
        <span id="gatewayresponses_csharp">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#gatewayresponses_csharp" style="color: inherit; text-decoration: inherit;">Gateway<wbr>Responses</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">Dictionary&lt;string, Pulumi.<wbr>Aws<wbr>Api<wbr>Gateway.<wbr>Inputs.<wbr>Swagger<wbr>Gateway<wbr>Response<wbr>Args&gt;</span>
    </dt>
    <dd>Define custom gateway responses for the API. This can be used to properly enable
CORS for Lambda Authorizers.</dd><dt class="property-optional"
            title="Optional">
        <span id="requestvalidator_csharp">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#requestvalidator_csharp" style="color: inherit; text-decoration: inherit;">Request<wbr>Validator</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type"><a href="#requestvalidator">Pulumi.<wbr>Aws<wbr>Api<wbr>Gateway.<wbr>Request<wbr>Validator</a></span>
    </dt>
    <dd>Request Validator specifies the validator to use at the API level. Note method level validators
override this.</dd><dt class="property-optional"
            title="Optional">
        <span id="routes_csharp">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#routes_csharp" style="color: inherit; text-decoration: inherit;">Routes</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type"><a href="#route">List&lt;Pulumi.<wbr>Aws<wbr>Api<wbr>Gateway.<wbr>Inputs.<wbr>Route&gt;</a></span>
    </dt>
    <dd><p>Routes to use to initialize the APIGateway.  These will be used to create the Swagger
specification for the API.</p>
<p>Either <code>swaggerString</code> or <code>routes</code> must be specified.</p>
</dd><dt class="property-optional"
            title="Optional">
        <span id="stagename_csharp">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#stagename_csharp" style="color: inherit; text-decoration: inherit;">Stage<wbr>Name</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">string</span>
    </dt>
    <dd>The stage name for your API. This will get added as a base path to your API url.</dd><dt class="property-optional"
            title="Optional">
        <span id="staticroutesbucket_csharp">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#staticroutesbucket_csharp" style="color: inherit; text-decoration: inherit;">Static<wbr>Routes<wbr>Bucket</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">Pulumi.<wbr>Aws.<wbr>S3.<wbr>Bucket</span>
    </dt>
    <dd><p>Bucket to use for placing resources for static resources.  If not provided a default one will
be created on your behalf if any <code>StaticRoute</code>s are provided.</p>
<p>This type is defined in the <a href="/registry/packages/aws">AWS Classic</a> package.</p>
</dd><dt class="property-optional"
            title="Optional">
        <span id="swaggerstring_csharp">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#swaggerstring_csharp" style="color: inherit; text-decoration: inherit;">Swagger<wbr>String</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">string</span>
    </dt>
    <dd><p>A Swagger specification already in string form to use to initialize the APIGateway.  Note
that you must manually provide permission for any route targets to be invoked by API Gateway
when using <code>swaggerString</code>.</p>
<p>Either <code>swaggerString</code> or <code>routes</code> must be specified.</p>
</dd><dt class="property-optional"
            title="Optional">
        <span id="tags_csharp">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#tags_csharp" style="color: inherit; text-decoration: inherit;">Tags</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">Dictionary&lt;string, string&gt;</span>
    </dt>
    <dd>'Map of tags to assign to the resource. If configured with a provider <code>defaultTags</code> configuration block present,
tags with matching keys will overwrite those defined at the provider-level.</dd></dl>
</pulumi-choosable>
</div>

<div>
<pulumi-choosable type="language" values="go">
<dl class="resources-properties"><dt class="property-optional"
            title="Optional">
        <span id="apikeysource_go">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#apikeysource_go" style="color: inherit; text-decoration: inherit;">Api<wbr>Key<wbr>Source</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type"><a href="#apikeysource">APIKey<wbr>Source</a></span>
    </dt>
    <dd>The source for the apikey. This can either be a HEADER or AUTHORIZER. If <code>apiKeyRequired</code> is
set to true on a route, and this is not defined the value will default to HEADER.</dd><dt class="property-optional"
            title="Optional">
        <span id="binarymediatypes_go">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#binarymediatypes_go" style="color: inherit; text-decoration: inherit;">Binary<wbr>Media<wbr>Types</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">[]string</span>
    </dt>
    <dd>List of binary media types supported by the REST API. By default, the REST API supports only UTF-8-encoded text payloads.
If importing an OpenAPI specification via the body argument, this corresponds to the x-amazon-apigateway-binary-media-types extension.
If the argument value is provided and is different than the OpenAPI value, the argument value will override the OpenAPI value.</dd><dt class="property-optional"
            title="Optional">
        <span id="description_go">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#description_go" style="color: inherit; text-decoration: inherit;">Description</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">string</span>
    </dt>
    <dd>Description of the REST API.</dd><dt class="property-optional"
            title="Optional">
        <span id="disableexecuteapiendpoint_go">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#disableexecuteapiendpoint_go" style="color: inherit; text-decoration: inherit;">Disable<wbr>Execute<wbr>Api<wbr>Endpoint</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">bool</span>
    </dt>
    <dd>Whether clients can invoke your API by using the default execute-api endpoint. By default, clients can invoke
your API with the default https://{api_id}.execute-api.{region}.amazonaws.com endpoint. To require that
clients use a custom domain name to invoke your API, disable the default endpoint. Defaults to false.</dd><dt class="property-optional"
            title="Optional">
        <span id="gatewayresponses_go">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#gatewayresponses_go" style="color: inherit; text-decoration: inherit;">Gateway<wbr>Responses</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">map[string]Swagger<wbr>Gateway<wbr>Response<wbr>Args</span>
    </dt>
    <dd>Define custom gateway responses for the API. This can be used to properly enable
CORS for Lambda Authorizers.</dd><dt class="property-optional"
            title="Optional">
        <span id="requestvalidator_go">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#requestvalidator_go" style="color: inherit; text-decoration: inherit;">Request<wbr>Validator</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type"><a href="#requestvalidator">Request<wbr>Validator</a></span>
    </dt>
    <dd>Request Validator specifies the validator to use at the API level. Note method level validators
override this.</dd><dt class="property-optional"
            title="Optional">
        <span id="routes_go">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#routes_go" style="color: inherit; text-decoration: inherit;">Routes</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type"><a href="#route">[]Route<wbr>Args</a></span>
    </dt>
    <dd><p>Routes to use to initialize the APIGateway.  These will be used to create the Swagger
specification for the API.</p>
<p>Either <code>swaggerString</code> or <code>routes</code> must be specified.</p>
</dd><dt class="property-optional"
            title="Optional">
        <span id="stagename_go">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#stagename_go" style="color: inherit; text-decoration: inherit;">Stage<wbr>Name</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">string</span>
    </dt>
    <dd>The stage name for your API. This will get added as a base path to your API url.</dd><dt class="property-optional"
            title="Optional">
        <span id="staticroutesbucket_go">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#staticroutesbucket_go" style="color: inherit; text-decoration: inherit;">Static<wbr>Routes<wbr>Bucket</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">Bucket</span>
    </dt>
    <dd><p>Bucket to use for placing resources for static resources.  If not provided a default one will
be created on your behalf if any <code>StaticRoute</code>s are provided.</p>
<p>This type is defined in the <a href="/registry/packages/aws">AWS Classic</a> package.</p>
</dd><dt class="property-optional"
            title="Optional">
        <span id="swaggerstring_go">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#swaggerstring_go" style="color: inherit; text-decoration: inherit;">Swagger<wbr>String</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">string</span>
    </dt>
    <dd><p>A Swagger specification already in string form to use to initialize the APIGateway.  Note
that you must manually provide permission for any route targets to be invoked by API Gateway
when using <code>swaggerString</code>.</p>
<p>Either <code>swaggerString</code> or <code>routes</code> must be specified.</p>
</dd><dt class="property-optional"
            title="Optional">
        <span id="tags_go">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#tags_go" style="color: inherit; text-decoration: inherit;">Tags</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">map[string]string</span>
    </dt>
    <dd>'Map of tags to assign to the resource. If configured with a provider <code>defaultTags</code> configuration block present,
tags with matching keys will overwrite those defined at the provider-level.</dd></dl>
</pulumi-choosable>
</div>

<div>
<pulumi-choosable type="language" values="java">
<dl class="resources-properties"><dt class="property-optional"
            title="Optional">
        <span id="apikeysource_java">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#apikeysource_java" style="color: inherit; text-decoration: inherit;">api<wbr>Key<wbr>Source</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type"><a href="#apikeysource">APIKey<wbr>Source</a></span>
    </dt>
    <dd>The source for the apikey. This can either be a HEADER or AUTHORIZER. If <code>apiKeyRequired</code> is
set to true on a route, and this is not defined the value will default to HEADER.</dd><dt class="property-optional"
            title="Optional">
        <span id="binarymediatypes_java">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#binarymediatypes_java" style="color: inherit; text-decoration: inherit;">binary<wbr>Media<wbr>Types</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">List&lt;String&gt;</span>
    </dt>
    <dd>List of binary media types supported by the REST API. By default, the REST API supports only UTF-8-encoded text payloads.
If importing an OpenAPI specification via the body argument, this corresponds to the x-amazon-apigateway-binary-media-types extension.
If the argument value is provided and is different than the OpenAPI value, the argument value will override the OpenAPI value.</dd><dt class="property-optional"
            title="Optional">
        <span id="description_java">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#description_java" style="color: inherit; text-decoration: inherit;">description</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">String</span>
    </dt>
    <dd>Description of the REST API.</dd><dt class="property-optional"
            title="Optional">
        <span id="disableexecuteapiendpoint_java">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#disableexecuteapiendpoint_java" style="color: inherit; text-decoration: inherit;">disable<wbr>Execute<wbr>Api<wbr>Endpoint</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">Boolean</span>
    </dt>
    <dd>Whether clients can invoke your API by using the default execute-api endpoint. By default, clients can invoke
your API with the default https://{api_id}.execute-api.{region}.amazonaws.com endpoint. To require that
clients use a custom domain name to invoke your API, disable the default endpoint. Defaults to false.</dd><dt class="property-optional"
            title="Optional">
        <span id="gatewayresponses_java">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#gatewayresponses_java" style="color: inherit; text-decoration: inherit;">gateway<wbr>Responses</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">Map&lt;String,Swagger<wbr>Gateway<wbr>Response<wbr>Args&gt;</span>
    </dt>
    <dd>Define custom gateway responses for the API. This can be used to properly enable
CORS for Lambda Authorizers.</dd><dt class="property-optional"
            title="Optional">
        <span id="requestvalidator_java">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#requestvalidator_java" style="color: inherit; text-decoration: inherit;">request<wbr>Validator</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type"><a href="#requestvalidator">Request<wbr>Validator</a></span>
    </dt>
    <dd>Request Validator specifies the validator to use at the API level. Note method level validators
override this.</dd><dt class="property-optional"
            title="Optional">
        <span id="routes_java">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#routes_java" style="color: inherit; text-decoration: inherit;">routes</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type"><a href="#route">List&lt;Route&gt;</a></span>
    </dt>
    <dd><p>Routes to use to initialize the APIGateway.  These will be used to create the Swagger
specification for the API.</p>
<p>Either <code>swaggerString</code> or <code>routes</code> must be specified.</p>
</dd><dt class="property-optional"
            title="Optional">
        <span id="stagename_java">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#stagename_java" style="color: inherit; text-decoration: inherit;">stage<wbr>Name</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">String</span>
    </dt>
    <dd>The stage name for your API. This will get added as a base path to your API url.</dd><dt class="property-optional"
            title="Optional">
        <span id="staticroutesbucket_java">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#staticroutesbucket_java" style="color: inherit; text-decoration: inherit;">static<wbr>Routes<wbr>Bucket</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">Bucket</span>
    </dt>
    <dd><p>Bucket to use for placing resources for static resources.  If not provided a default one will
be created on your behalf if any <code>StaticRoute</code>s are provided.</p>
<p>This type is defined in the <a href="/registry/packages/aws">AWS Classic</a> package.</p>
</dd><dt class="property-optional"
            title="Optional">
        <span id="swaggerstring_java">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#swaggerstring_java" style="color: inherit; text-decoration: inherit;">swagger<wbr>String</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">String</span>
    </dt>
    <dd><p>A Swagger specification already in string form to use to initialize the APIGateway.  Note
that you must manually provide permission for any route targets to be invoked by API Gateway
when using <code>swaggerString</code>.</p>
<p>Either <code>swaggerString</code> or <code>routes</code> must be specified.</p>
</dd><dt class="property-optional"
            title="Optional">
        <span id="tags_java">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#tags_java" style="color: inherit; text-decoration: inherit;">tags</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">Map&lt;String,String&gt;</span>
    </dt>
    <dd>'Map of tags to assign to the resource. If configured with a provider <code>defaultTags</code> configuration block present,
tags with matching keys will overwrite those defined at the provider-level.</dd></dl>
</pulumi-choosable>
</div>

<div>
<pulumi-choosable type="language" values="javascript,typescript">
<dl class="resources-properties"><dt class="property-optional"
            title="Optional">
        <span id="apikeysource_nodejs">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#apikeysource_nodejs" style="color: inherit; text-decoration: inherit;">api<wbr>Key<wbr>Source</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type"><a href="#apikeysource">APIKey<wbr>Source</a></span>
    </dt>
    <dd>The source for the apikey. This can either be a HEADER or AUTHORIZER. If <code>apiKeyRequired</code> is
set to true on a route, and this is not defined the value will default to HEADER.</dd><dt class="property-optional"
            title="Optional">
        <span id="binarymediatypes_nodejs">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#binarymediatypes_nodejs" style="color: inherit; text-decoration: inherit;">binary<wbr>Media<wbr>Types</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">string[]</span>
    </dt>
    <dd>List of binary media types supported by the REST API. By default, the REST API supports only UTF-8-encoded text payloads.
If importing an OpenAPI specification via the body argument, this corresponds to the x-amazon-apigateway-binary-media-types extension.
If the argument value is provided and is different than the OpenAPI value, the argument value will override the OpenAPI value.</dd><dt class="property-optional"
            title="Optional">
        <span id="description_nodejs">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#description_nodejs" style="color: inherit; text-decoration: inherit;">description</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">string</span>
    </dt>
    <dd>Description of the REST API.</dd><dt class="property-optional"
            title="Optional">
        <span id="disableexecuteapiendpoint_nodejs">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#disableexecuteapiendpoint_nodejs" style="color: inherit; text-decoration: inherit;">disable<wbr>Execute<wbr>Api<wbr>Endpoint</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">boolean</span>
    </dt>
    <dd>Whether clients can invoke your API by using the default execute-api endpoint. By default, clients can invoke
your API with the default https://{api_id}.execute-api.{region}.amazonaws.com endpoint. To require that
clients use a custom domain name to invoke your API, disable the default endpoint. Defaults to false.</dd><dt class="property-optional"
            title="Optional">
        <span id="gatewayresponses_nodejs">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#gatewayresponses_nodejs" style="color: inherit; text-decoration: inherit;">gateway<wbr>Responses</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">{[key: string]: Swagger<wbr>Gateway<wbr>Response<wbr>Args}</span>
    </dt>
    <dd>Define custom gateway responses for the API. This can be used to properly enable
CORS for Lambda Authorizers.</dd><dt class="property-optional"
            title="Optional">
        <span id="requestvalidator_nodejs">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#requestvalidator_nodejs" style="color: inherit; text-decoration: inherit;">request<wbr>Validator</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type"><a href="#requestvalidator">Request<wbr>Validator</a></span>
    </dt>
    <dd>Request Validator specifies the validator to use at the API level. Note method level validators
override this.</dd><dt class="property-optional"
            title="Optional">
        <span id="routes_nodejs">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#routes_nodejs" style="color: inherit; text-decoration: inherit;">routes</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type"><a href="#route">Route[]</a></span>
    </dt>
    <dd><p>Routes to use to initialize the APIGateway.  These will be used to create the Swagger
specification for the API.</p>
<p>Either <code>swaggerString</code> or <code>routes</code> must be specified.</p>
</dd><dt class="property-optional"
            title="Optional">
        <span id="stagename_nodejs">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#stagename_nodejs" style="color: inherit; text-decoration: inherit;">stage<wbr>Name</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">string</span>
    </dt>
    <dd>The stage name for your API. This will get added as a base path to your API url.</dd><dt class="property-optional"
            title="Optional">
        <span id="staticroutesbucket_nodejs">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#staticroutesbucket_nodejs" style="color: inherit; text-decoration: inherit;">static<wbr>Routes<wbr>Bucket</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">pulumi<wbr>Awss3Bucket</span>
    </dt>
    <dd><p>Bucket to use for placing resources for static resources.  If not provided a default one will
be created on your behalf if any <code>StaticRoute</code>s are provided.</p>
<p>This type is defined in the <a href="/registry/packages/aws">AWS Classic</a> package.</p>
</dd><dt class="property-optional"
            title="Optional">
        <span id="swaggerstring_nodejs">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#swaggerstring_nodejs" style="color: inherit; text-decoration: inherit;">swagger<wbr>String</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">string</span>
    </dt>
    <dd><p>A Swagger specification already in string form to use to initialize the APIGateway.  Note
that you must manually provide permission for any route targets to be invoked by API Gateway
when using <code>swaggerString</code>.</p>
<p>Either <code>swaggerString</code> or <code>routes</code> must be specified.</p>
</dd><dt class="property-optional"
            title="Optional">
        <span id="tags_nodejs">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#tags_nodejs" style="color: inherit; text-decoration: inherit;">tags</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">{[key: string]: string}</span>
    </dt>
    <dd>'Map of tags to assign to the resource. If configured with a provider <code>defaultTags</code> configuration block present,
tags with matching keys will overwrite those defined at the provider-level.</dd></dl>
</pulumi-choosable>
</div>

<div>
<pulumi-choosable type="language" values="python">
<dl class="resources-properties"><dt class="property-optional"
            title="Optional">
        <span id="api_key_source_python">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#api_key_source_python" style="color: inherit; text-decoration: inherit;">api_<wbr>key_<wbr>source</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type"><a href="#apikeysource">APIKey<wbr>Source</a></span>
    </dt>
    <dd>The source for the apikey. This can either be a HEADER or AUTHORIZER. If <code>apiKeyRequired</code> is
set to true on a route, and this is not defined the value will default to HEADER.</dd><dt class="property-optional"
            title="Optional">
        <span id="binary_media_types_python">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#binary_media_types_python" style="color: inherit; text-decoration: inherit;">binary_<wbr>media_<wbr>types</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">Sequence[str]</span>
    </dt>
    <dd>List of binary media types supported by the REST API. By default, the REST API supports only UTF-8-encoded text payloads.
If importing an OpenAPI specification via the body argument, this corresponds to the x-amazon-apigateway-binary-media-types extension.
If the argument value is provided and is different than the OpenAPI value, the argument value will override the OpenAPI value.</dd><dt class="property-optional"
            title="Optional">
        <span id="description_python">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#description_python" style="color: inherit; text-decoration: inherit;">description</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">str</span>
    </dt>
    <dd>Description of the REST API.</dd><dt class="property-optional"
            title="Optional">
        <span id="disable_execute_api_endpoint_python">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#disable_execute_api_endpoint_python" style="color: inherit; text-decoration: inherit;">disable_<wbr>execute_<wbr>api_<wbr>endpoint</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">bool</span>
    </dt>
    <dd>Whether clients can invoke your API by using the default execute-api endpoint. By default, clients can invoke
your API with the default https://{api_id}.execute-api.{region}.amazonaws.com endpoint. To require that
clients use a custom domain name to invoke your API, disable the default endpoint. Defaults to false.</dd><dt class="property-optional"
            title="Optional">
        <span id="gateway_responses_python">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#gateway_responses_python" style="color: inherit; text-decoration: inherit;">gateway_<wbr>responses</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">Mapping[str, Swagger<wbr>Gateway<wbr>Response<wbr>Args]</span>
    </dt>
    <dd>Define custom gateway responses for the API. This can be used to properly enable
CORS for Lambda Authorizers.</dd><dt class="property-optional"
            title="Optional">
        <span id="request_validator_python">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#request_validator_python" style="color: inherit; text-decoration: inherit;">request_<wbr>validator</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type"><a href="#requestvalidator">Request<wbr>Validator</a></span>
    </dt>
    <dd>Request Validator specifies the validator to use at the API level. Note method level validators
override this.</dd><dt class="property-optional"
            title="Optional">
        <span id="routes_python">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#routes_python" style="color: inherit; text-decoration: inherit;">routes</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type"><a href="#route">Sequence[Route<wbr>Args]</a></span>
    </dt>
    <dd><p>Routes to use to initialize the APIGateway.  These will be used to create the Swagger
specification for the API.</p>
<p>Either <code>swaggerString</code> or <code>routes</code> must be specified.</p>
</dd><dt class="property-optional"
            title="Optional">
        <span id="stage_name_python">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#stage_name_python" style="color: inherit; text-decoration: inherit;">stage_<wbr>name</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">str</span>
    </dt>
    <dd>The stage name for your API. This will get added as a base path to your API url.</dd><dt class="property-optional"
            title="Optional">
        <span id="static_routes_bucket_python">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#static_routes_bucket_python" style="color: inherit; text-decoration: inherit;">static_<wbr>routes_<wbr>bucket</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">pulumi_<wbr>aws.s3.<wbr>Bucket</span>
    </dt>
    <dd><p>Bucket to use for placing resources for static resources.  If not provided a default one will
be created on your behalf if any <code>StaticRoute</code>s are provided.</p>
<p>This type is defined in the <a href="/registry/packages/aws">AWS Classic</a> package.</p>
</dd><dt class="property-optional"
            title="Optional">
        <span id="swagger_string_python">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#swagger_string_python" style="color: inherit; text-decoration: inherit;">swagger_<wbr>string</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">str</span>
    </dt>
    <dd><p>A Swagger specification already in string form to use to initialize the APIGateway.  Note
that you must manually provide permission for any route targets to be invoked by API Gateway
when using <code>swaggerString</code>.</p>
<p>Either <code>swaggerString</code> or <code>routes</code> must be specified.</p>
</dd><dt class="property-optional"
            title="Optional">
        <span id="tags_python">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#tags_python" style="color: inherit; text-decoration: inherit;">tags</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">Mapping[str, str]</span>
    </dt>
    <dd>'Map of tags to assign to the resource. If configured with a provider <code>defaultTags</code> configuration block present,
tags with matching keys will overwrite those defined at the provider-level.</dd></dl>
</pulumi-choosable>
</div>

<div>
<pulumi-choosable type="language" values="yaml">
<dl class="resources-properties"><dt class="property-optional"
            title="Optional">
        <span id="apikeysource_yaml">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#apikeysource_yaml" style="color: inherit; text-decoration: inherit;">api<wbr>Key<wbr>Source</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type"><a href="#apikeysource">&#34;HEADER&#34; | &#34;AUTHORIZER&#34;</a></span>
    </dt>
    <dd>The source for the apikey. This can either be a HEADER or AUTHORIZER. If <code>apiKeyRequired</code> is
set to true on a route, and this is not defined the value will default to HEADER.</dd><dt class="property-optional"
            title="Optional">
        <span id="binarymediatypes_yaml">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#binarymediatypes_yaml" style="color: inherit; text-decoration: inherit;">binary<wbr>Media<wbr>Types</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">List&lt;String&gt;</span>
    </dt>
    <dd>List of binary media types supported by the REST API. By default, the REST API supports only UTF-8-encoded text payloads.
If importing an OpenAPI specification via the body argument, this corresponds to the x-amazon-apigateway-binary-media-types extension.
If the argument value is provided and is different than the OpenAPI value, the argument value will override the OpenAPI value.</dd><dt class="property-optional"
            title="Optional">
        <span id="description_yaml">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#description_yaml" style="color: inherit; text-decoration: inherit;">description</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">String</span>
    </dt>
    <dd>Description of the REST API.</dd><dt class="property-optional"
            title="Optional">
        <span id="disableexecuteapiendpoint_yaml">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#disableexecuteapiendpoint_yaml" style="color: inherit; text-decoration: inherit;">disable<wbr>Execute<wbr>Api<wbr>Endpoint</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">Boolean</span>
    </dt>
    <dd>Whether clients can invoke your API by using the default execute-api endpoint. By default, clients can invoke
your API with the default https://{api_id}.execute-api.{region}.amazonaws.com endpoint. To require that
clients use a custom domain name to invoke your API, disable the default endpoint. Defaults to false.</dd><dt class="property-optional"
            title="Optional">
        <span id="gatewayresponses_yaml">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#gatewayresponses_yaml" style="color: inherit; text-decoration: inherit;">gateway<wbr>Responses</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">Map&lt;Property Map&gt;</span>
    </dt>
    <dd>Define custom gateway responses for the API. This can be used to properly enable
CORS for Lambda Authorizers.</dd><dt class="property-optional"
            title="Optional">
        <span id="requestvalidator_yaml">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#requestvalidator_yaml" style="color: inherit; text-decoration: inherit;">request<wbr>Validator</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type"><a href="#requestvalidator">&#34;ALL&#34; | &#34;PARAMS_ONLY&#34; | &#34;BODY_ONLY&#34;</a></span>
    </dt>
    <dd>Request Validator specifies the validator to use at the API level. Note method level validators
override this.</dd><dt class="property-optional"
            title="Optional">
        <span id="routes_yaml">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#routes_yaml" style="color: inherit; text-decoration: inherit;">routes</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type"><a href="#route">List&lt;Property Map&gt;</a></span>
    </dt>
    <dd><p>Routes to use to initialize the APIGateway.  These will be used to create the Swagger
specification for the API.</p>
<p>Either <code>swaggerString</code> or <code>routes</code> must be specified.</p>
</dd><dt class="property-optional"
            title="Optional">
        <span id="stagename_yaml">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#stagename_yaml" style="color: inherit; text-decoration: inherit;">stage<wbr>Name</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">String</span>
    </dt>
    <dd>The stage name for your API. This will get added as a base path to your API url.</dd><dt class="property-optional"
            title="Optional">
        <span id="staticroutesbucket_yaml">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#staticroutesbucket_yaml" style="color: inherit; text-decoration: inherit;">static<wbr>Routes<wbr>Bucket</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">aws:s3:Bucket</span>
    </dt>
    <dd><p>Bucket to use for placing resources for static resources.  If not provided a default one will
be created on your behalf if any <code>StaticRoute</code>s are provided.</p>
<p>This type is defined in the <a href="/registry/packages/aws">AWS Classic</a> package.</p>
</dd><dt class="property-optional"
            title="Optional">
        <span id="swaggerstring_yaml">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#swaggerstring_yaml" style="color: inherit; text-decoration: inherit;">swagger<wbr>String</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">String</span>
    </dt>
    <dd><p>A Swagger specification already in string form to use to initialize the APIGateway.  Note
that you must manually provide permission for any route targets to be invoked by API Gateway
when using <code>swaggerString</code>.</p>
<p>Either <code>swaggerString</code> or <code>routes</code> must be specified.</p>
</dd><dt class="property-optional"
            title="Optional">
        <span id="tags_yaml">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#tags_yaml" style="color: inherit; text-decoration: inherit;">tags</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">Map&lt;String&gt;</span>
    </dt>
    <dd>'Map of tags to assign to the resource. If configured with a provider <code>defaultTags</code> configuration block present,
tags with matching keys will overwrite those defined at the provider-level.</dd></dl>
</pulumi-choosable>
</div>


### Outputs

All [input](#inputs) properties are implicitly available as output properties. Additionally, the RestAPI resource produces the following output properties:



<div>
<pulumi-choosable type="language" values="csharp">
<dl class="resources-properties"><dt class="property-"
            title="">
        <span id="api_csharp">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#api_csharp" style="color: inherit; text-decoration: inherit;">Api</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">Pulumi.<wbr>Aws.<wbr>Api<wbr>Gateway.<wbr>Rest<wbr>Api</span>
    </dt>
    <dd><p>The underlying RestAPI resource.</p>
<p>This type is defined in the <a href="/registry/packages/aws">AWS Classic</a> package.</p>
</dd><dt class="property-"
            title="">
        <span id="deployment_csharp">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#deployment_csharp" style="color: inherit; text-decoration: inherit;">Deployment</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">Pulumi.<wbr>Aws.<wbr>Api<wbr>Gateway.<wbr>Deployment</span>
    </dt>
    <dd><p>The underlying Deployment resource.</p>
<p>This type is defined in the <a href="/registry/packages/aws">AWS Classic</a> package.</p>
</dd><dt class="property-"
            title="">
        <span id="stage_csharp">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#stage_csharp" style="color: inherit; text-decoration: inherit;">Stage</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">Pulumi.<wbr>Aws.<wbr>Api<wbr>Gateway.<wbr>Stage</span>
    </dt>
    <dd><p>The underlying Stage resource.</p>
<p>This type is defined in the <a href="/registry/packages/aws">AWS Classic</a> package.</p>
</dd><dt class="property-"
            title="">
        <span id="url_csharp">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#url_csharp" style="color: inherit; text-decoration: inherit;">Url</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">string</span>
    </dt>
    <dd>The URL where the Rest API is exposed.</dd><dt class="property-"
            title="">
        <span id="apipolicy_csharp">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#apipolicy_csharp" style="color: inherit; text-decoration: inherit;">Api<wbr>Policy</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">Pulumi.<wbr>Aws.<wbr>Api<wbr>Gateway.<wbr>Rest<wbr>Api<wbr>Policy</span>
    </dt>
    <dd><p>The underlying RestAPIPolicy resource.</p>
<p>This type is defined in the <a href="/registry/packages/aws">AWS Classic</a> package.</p>
</dd></dl>
</pulumi-choosable>
</div>

<div>
<pulumi-choosable type="language" values="go">
<dl class="resources-properties"><dt class="property-"
            title="">
        <span id="api_go">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#api_go" style="color: inherit; text-decoration: inherit;">Api</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">Rest<wbr>Api</span>
    </dt>
    <dd><p>The underlying RestAPI resource.</p>
<p>This type is defined in the <a href="/registry/packages/aws">AWS Classic</a> package.</p>
</dd><dt class="property-"
            title="">
        <span id="deployment_go">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#deployment_go" style="color: inherit; text-decoration: inherit;">Deployment</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">Deployment</span>
    </dt>
    <dd><p>The underlying Deployment resource.</p>
<p>This type is defined in the <a href="/registry/packages/aws">AWS Classic</a> package.</p>
</dd><dt class="property-"
            title="">
        <span id="stage_go">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#stage_go" style="color: inherit; text-decoration: inherit;">Stage</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">Stage</span>
    </dt>
    <dd><p>The underlying Stage resource.</p>
<p>This type is defined in the <a href="/registry/packages/aws">AWS Classic</a> package.</p>
</dd><dt class="property-"
            title="">
        <span id="url_go">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#url_go" style="color: inherit; text-decoration: inherit;">Url</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">string</span>
    </dt>
    <dd>The URL where the Rest API is exposed.</dd><dt class="property-"
            title="">
        <span id="apipolicy_go">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#apipolicy_go" style="color: inherit; text-decoration: inherit;">Api<wbr>Policy</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">Rest<wbr>Api<wbr>Policy</span>
    </dt>
    <dd><p>The underlying RestAPIPolicy resource.</p>
<p>This type is defined in the <a href="/registry/packages/aws">AWS Classic</a> package.</p>
</dd></dl>
</pulumi-choosable>
</div>

<div>
<pulumi-choosable type="language" values="java">
<dl class="resources-properties"><dt class="property-"
            title="">
        <span id="api_java">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#api_java" style="color: inherit; text-decoration: inherit;">api</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">Rest<wbr>Api</span>
    </dt>
    <dd><p>The underlying RestAPI resource.</p>
<p>This type is defined in the <a href="/registry/packages/aws">AWS Classic</a> package.</p>
</dd><dt class="property-"
            title="">
        <span id="deployment_java">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#deployment_java" style="color: inherit; text-decoration: inherit;">deployment</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">Deployment</span>
    </dt>
    <dd><p>The underlying Deployment resource.</p>
<p>This type is defined in the <a href="/registry/packages/aws">AWS Classic</a> package.</p>
</dd><dt class="property-"
            title="">
        <span id="stage_java">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#stage_java" style="color: inherit; text-decoration: inherit;">stage</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">Stage</span>
    </dt>
    <dd><p>The underlying Stage resource.</p>
<p>This type is defined in the <a href="/registry/packages/aws">AWS Classic</a> package.</p>
</dd><dt class="property-"
            title="">
        <span id="url_java">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#url_java" style="color: inherit; text-decoration: inherit;">url</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">String</span>
    </dt>
    <dd>The URL where the Rest API is exposed.</dd><dt class="property-"
            title="">
        <span id="apipolicy_java">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#apipolicy_java" style="color: inherit; text-decoration: inherit;">api<wbr>Policy</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">Rest<wbr>Api<wbr>Policy</span>
    </dt>
    <dd><p>The underlying RestAPIPolicy resource.</p>
<p>This type is defined in the <a href="/registry/packages/aws">AWS Classic</a> package.</p>
</dd></dl>
</pulumi-choosable>
</div>

<div>
<pulumi-choosable type="language" values="javascript,typescript">
<dl class="resources-properties"><dt class="property-"
            title="">
        <span id="api_nodejs">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#api_nodejs" style="color: inherit; text-decoration: inherit;">api</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">pulumi<wbr>Awsapigateway<wbr>Rest<wbr>Api</span>
    </dt>
    <dd><p>The underlying RestAPI resource.</p>
<p>This type is defined in the <a href="/registry/packages/aws">AWS Classic</a> package.</p>
</dd><dt class="property-"
            title="">
        <span id="deployment_nodejs">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#deployment_nodejs" style="color: inherit; text-decoration: inherit;">deployment</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">pulumi<wbr>Awsapigateway<wbr>Deployment</span>
    </dt>
    <dd><p>The underlying Deployment resource.</p>
<p>This type is defined in the <a href="/registry/packages/aws">AWS Classic</a> package.</p>
</dd><dt class="property-"
            title="">
        <span id="stage_nodejs">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#stage_nodejs" style="color: inherit; text-decoration: inherit;">stage</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">pulumi<wbr>Awsapigateway<wbr>Stage</span>
    </dt>
    <dd><p>The underlying Stage resource.</p>
<p>This type is defined in the <a href="/registry/packages/aws">AWS Classic</a> package.</p>
</dd><dt class="property-"
            title="">
        <span id="url_nodejs">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#url_nodejs" style="color: inherit; text-decoration: inherit;">url</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">string</span>
    </dt>
    <dd>The URL where the Rest API is exposed.</dd><dt class="property-"
            title="">
        <span id="apipolicy_nodejs">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#apipolicy_nodejs" style="color: inherit; text-decoration: inherit;">api<wbr>Policy</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">pulumi<wbr>Awsapigateway<wbr>Rest<wbr>Api<wbr>Policy</span>
    </dt>
    <dd><p>The underlying RestAPIPolicy resource.</p>
<p>This type is defined in the <a href="/registry/packages/aws">AWS Classic</a> package.</p>
</dd></dl>
</pulumi-choosable>
</div>

<div>
<pulumi-choosable type="language" values="python">
<dl class="resources-properties"><dt class="property-"
            title="">
        <span id="api_python">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#api_python" style="color: inherit; text-decoration: inherit;">api</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">pulumi_<wbr>aws.apigateway.<wbr>Rest<wbr>Api</span>
    </dt>
    <dd><p>The underlying RestAPI resource.</p>
<p>This type is defined in the <a href="/registry/packages/aws">AWS Classic</a> package.</p>
</dd><dt class="property-"
            title="">
        <span id="deployment_python">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#deployment_python" style="color: inherit; text-decoration: inherit;">deployment</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">pulumi_<wbr>aws.apigateway.<wbr>Deployment</span>
    </dt>
    <dd><p>The underlying Deployment resource.</p>
<p>This type is defined in the <a href="/registry/packages/aws">AWS Classic</a> package.</p>
</dd><dt class="property-"
            title="">
        <span id="stage_python">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#stage_python" style="color: inherit; text-decoration: inherit;">stage</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">pulumi_<wbr>aws.apigateway.<wbr>Stage</span>
    </dt>
    <dd><p>The underlying Stage resource.</p>
<p>This type is defined in the <a href="/registry/packages/aws">AWS Classic</a> package.</p>
</dd><dt class="property-"
            title="">
        <span id="url_python">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#url_python" style="color: inherit; text-decoration: inherit;">url</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">str</span>
    </dt>
    <dd>The URL where the Rest API is exposed.</dd><dt class="property-"
            title="">
        <span id="api_policy_python">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#api_policy_python" style="color: inherit; text-decoration: inherit;">api_<wbr>policy</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">pulumi_<wbr>aws.apigateway.<wbr>Rest<wbr>Api<wbr>Policy</span>
    </dt>
    <dd><p>The underlying RestAPIPolicy resource.</p>
<p>This type is defined in the <a href="/registry/packages/aws">AWS Classic</a> package.</p>
</dd></dl>
</pulumi-choosable>
</div>

<div>
<pulumi-choosable type="language" values="yaml">
<dl class="resources-properties"><dt class="property-"
            title="">
        <span id="api_yaml">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#api_yaml" style="color: inherit; text-decoration: inherit;">api</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">aws:apigateway:Rest<wbr>Api</span>
    </dt>
    <dd><p>The underlying RestAPI resource.</p>
<p>This type is defined in the <a href="/registry/packages/aws">AWS Classic</a> package.</p>
</dd><dt class="property-"
            title="">
        <span id="deployment_yaml">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#deployment_yaml" style="color: inherit; text-decoration: inherit;">deployment</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">aws:apigateway:Deployment</span>
    </dt>
    <dd><p>The underlying Deployment resource.</p>
<p>This type is defined in the <a href="/registry/packages/aws">AWS Classic</a> package.</p>
</dd><dt class="property-"
            title="">
        <span id="stage_yaml">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#stage_yaml" style="color: inherit; text-decoration: inherit;">stage</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">aws:apigateway:Stage</span>
    </dt>
    <dd><p>The underlying Stage resource.</p>
<p>This type is defined in the <a href="/registry/packages/aws">AWS Classic</a> package.</p>
</dd><dt class="property-"
            title="">
        <span id="url_yaml">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#url_yaml" style="color: inherit; text-decoration: inherit;">url</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">String</span>
    </dt>
    <dd>The URL where the Rest API is exposed.</dd><dt class="property-"
            title="">
        <span id="apipolicy_yaml">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#apipolicy_yaml" style="color: inherit; text-decoration: inherit;">api<wbr>Policy</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">aws:apigateway:Rest<wbr>Api<wbr>Policy</span>
    </dt>
    <dd><p>The underlying RestAPIPolicy resource.</p>
<p>This type is defined in the <a href="/registry/packages/aws">AWS Classic</a> package.</p>
</dd></dl>
</pulumi-choosable>
</div>







## Supporting Types



<h4 id="apikeysource">
APIKey<wbr>Source<pulumi-choosable type="language" values="python,go" class="inline">, APIKey<wbr>Source<wbr>Args</pulumi-choosable>
</h4>

<div>
<pulumi-choosable type="language" values="csharp">
<dl class="tabular"><dt>HEADER</dt>
    <dd>HEADER</dd><dt>AUTHORIZER</dt>
    <dd>AUTHORIZER</dd></dl>
</pulumi-choosable>
</div>

<div>
<pulumi-choosable type="language" values="go">
<dl class="tabular"><dt>APIKey<wbr>Source<wbr>HEADER</dt>
    <dd>HEADER</dd><dt>APIKey<wbr>Source<wbr>AUTHORIZER</dt>
    <dd>AUTHORIZER</dd></dl>
</pulumi-choosable>
</div>

<div>
<pulumi-choosable type="language" values="java">
<dl class="tabular"><dt>HEADER</dt>
    <dd>HEADER</dd><dt>AUTHORIZER</dt>
    <dd>AUTHORIZER</dd></dl>
</pulumi-choosable>
</div>

<div>
<pulumi-choosable type="language" values="javascript,typescript">
<dl class="tabular"><dt>HEADER</dt>
    <dd>HEADER</dd><dt>AUTHORIZER</dt>
    <dd>AUTHORIZER</dd></dl>
</pulumi-choosable>
</div>

<div>
<pulumi-choosable type="language" values="python">
<dl class="tabular"><dt>HEADER</dt>
    <dd>HEADER</dd><dt>AUTHORIZER</dt>
    <dd>AUTHORIZER</dd></dl>
</pulumi-choosable>
</div>

<div>
<pulumi-choosable type="language" values="yaml">
<dl class="tabular"><dt>"HEADER"</dt>
    <dd>HEADER</dd><dt>"AUTHORIZER"</dt>
    <dd>AUTHORIZER</dd></dl>
</pulumi-choosable>
</div>

<h4 id="authorizer">
Authorizer<pulumi-choosable type="language" values="python,go" class="inline">, Authorizer<wbr>Args</pulumi-choosable>
</h4>

<div>
<pulumi-choosable type="language" values="csharp">
<dl class="resources-properties"><dt class="property-required"
            title="Required">
        <span id="parametername_csharp">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#parametername_csharp" style="color: inherit; text-decoration: inherit;">Parameter<wbr>Name</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">string</span>
    </dt>
    <dd>parameterName is the name of the header or query parameter containing the authorization
token. Must be &quot;Unused&quot; for multiple identity sources.</dd><dt class="property-optional"
            title="Optional">
        <span id="authtype_csharp">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#authtype_csharp" style="color: inherit; text-decoration: inherit;">Auth<wbr>Type</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">string</span>
    </dt>
    <dd>Specifies the authorization mechanism for the client. Typical values are &quot;oauth2&quot; or &quot;custom&quot;.</dd><dt class="property-optional"
            title="Optional">
        <span id="authorizername_csharp">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#authorizername_csharp" style="color: inherit; text-decoration: inherit;">Authorizer<wbr>Name</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">string</span>
    </dt>
    <dd>The name for the Authorizer to be referenced as. This must be unique for each unique
authorizer within the API. If no name if specified, a name will be generated for you.</dd><dt class="property-optional"
            title="Optional">
        <span id="authorizerresultttlinseconds_csharp">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#authorizerresultttlinseconds_csharp" style="color: inherit; text-decoration: inherit;">Authorizer<wbr>Result<wbr>Ttl<wbr>In<wbr>Seconds</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">double</span>
    </dt>
    <dd>The number of seconds during which the resulting IAM policy is cached. Default is 300s. You
can set this value to 0 to disable caching. Max value is 3600s. Note - if you are sharing an
authorizer across more than one route you will want to disable the cache or else it will
cause problems for you.</dd><dt class="property-optional"
            title="Optional">
        <span id="handler_csharp">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#handler_csharp" style="color: inherit; text-decoration: inherit;">Handler</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">Pulumi.<wbr>Aws.<wbr>Lambda.<wbr>Function</span>
    </dt>
    <dd><p>The authorizerHandler specifies information about the authorizing Lambda.</p>
<p>This type is defined in the <a href="/registry/packages/aws">AWS Classic</a> package.</p>
</dd><dt class="property-optional"
            title="Optional">
        <span id="identitysource_csharp">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#identitysource_csharp" style="color: inherit; text-decoration: inherit;">Identity<wbr>Source</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">List&lt;string&gt;</span>
    </dt>
    <dd>List of mapping expressions of the request parameters as the identity source. This indicates
where in the request identity information is expected. Applicable for the authorizer of the
&quot;request&quot; type only. Example: [&quot;method.request.header.HeaderAuth1&quot;,
&quot;method.request.querystring.QueryString1&quot;]</dd><dt class="property-optional"
            title="Optional">
        <span id="identityvalidationexpression_csharp">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#identityvalidationexpression_csharp" style="color: inherit; text-decoration: inherit;">Identity<wbr>Validation<wbr>Expression</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">string</span>
    </dt>
    <dd>A regular expression for validating the token as the incoming identity. It only invokes the
authorizer's lambda if there is a match, else it will return a 401. This does not apply to
REQUEST Lambda Authorizers. Example: &quot;^x-[a-z]+&quot;.</dd><dt class="property-optional"
            title="Optional">
        <span id="methodstoauthorize_csharp">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#methodstoauthorize_csharp" style="color: inherit; text-decoration: inherit;">Methods<wbr>To<wbr>Authorize</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">List&lt;string&gt;</span>
    </dt>
    <dd>For method authorization, you can define resource servers and custom scopes by specifying the
&quot;resource-server/scope&quot;. e.g. [&quot;com.hamuta.movies/drama.view&quot;,
&quot;http://my.resource.com/file.read&quot;] For more information on resource servers and custom
scopes visit the AWS documentation -
https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pools-define-resource-servers.html</dd><dt class="property-optional"
            title="Optional">
        <span id="parameterlocation_csharp">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#parameterlocation_csharp" style="color: inherit; text-decoration: inherit;">Parameter<wbr>Location</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">string</span>
    </dt>
    <dd>Defines where in the request API Gateway should look for identity information. The value must
be &quot;header&quot; or &quot;query&quot;. If there are multiple identity sources, the value must be &quot;header&quot;.</dd><dt class="property-optional"
            title="Optional">
        <span id="providerarns_csharp">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#providerarns_csharp" style="color: inherit; text-decoration: inherit;">Provider<wbr>ARNs</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">List&lt;string&gt;</span>
    </dt>
    <dd>The ARNs of the Cognito User Pools to use.</dd><dt class="property-optional"
            title="Optional">
        <span id="type_csharp">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#type_csharp" style="color: inherit; text-decoration: inherit;">Type</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">string</span>
    </dt>
    <dd>The type of the authorizer. This value must be one of the following:</p>
<ul>
<li>&quot;token&quot;, for an authorizer with the caller identity embedded in an authorization token</li>
<li>&quot;request&quot;, for an authorizer with the caller identity contained in request parameters</li>
</ul></dd></dl>
</pulumi-choosable>
</div>

<div>
<pulumi-choosable type="language" values="go">
<dl class="resources-properties"><dt class="property-required"
            title="Required">
        <span id="parametername_go">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#parametername_go" style="color: inherit; text-decoration: inherit;">Parameter<wbr>Name</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">string</span>
    </dt>
    <dd>parameterName is the name of the header or query parameter containing the authorization
token. Must be &quot;Unused&quot; for multiple identity sources.</dd><dt class="property-optional"
            title="Optional">
        <span id="authtype_go">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#authtype_go" style="color: inherit; text-decoration: inherit;">Auth<wbr>Type</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">string</span>
    </dt>
    <dd>Specifies the authorization mechanism for the client. Typical values are &quot;oauth2&quot; or &quot;custom&quot;.</dd><dt class="property-optional"
            title="Optional">
        <span id="authorizername_go">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#authorizername_go" style="color: inherit; text-decoration: inherit;">Authorizer<wbr>Name</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">string</span>
    </dt>
    <dd>The name for the Authorizer to be referenced as. This must be unique for each unique
authorizer within the API. If no name if specified, a name will be generated for you.</dd><dt class="property-optional"
            title="Optional">
        <span id="authorizerresultttlinseconds_go">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#authorizerresultttlinseconds_go" style="color: inherit; text-decoration: inherit;">Authorizer<wbr>Result<wbr>Ttl<wbr>In<wbr>Seconds</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">float64</span>
    </dt>
    <dd>The number of seconds during which the resulting IAM policy is cached. Default is 300s. You
can set this value to 0 to disable caching. Max value is 3600s. Note - if you are sharing an
authorizer across more than one route you will want to disable the cache or else it will
cause problems for you.</dd><dt class="property-optional"
            title="Optional">
        <span id="handler_go">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#handler_go" style="color: inherit; text-decoration: inherit;">Handler</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">Function</span>
    </dt>
    <dd><p>The authorizerHandler specifies information about the authorizing Lambda.</p>
<p>This type is defined in the <a href="/registry/packages/aws">AWS Classic</a> package.</p>
</dd><dt class="property-optional"
            title="Optional">
        <span id="identitysource_go">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#identitysource_go" style="color: inherit; text-decoration: inherit;">Identity<wbr>Source</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">[]string</span>
    </dt>
    <dd>List of mapping expressions of the request parameters as the identity source. This indicates
where in the request identity information is expected. Applicable for the authorizer of the
&quot;request&quot; type only. Example: [&quot;method.request.header.HeaderAuth1&quot;,
&quot;method.request.querystring.QueryString1&quot;]</dd><dt class="property-optional"
            title="Optional">
        <span id="identityvalidationexpression_go">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#identityvalidationexpression_go" style="color: inherit; text-decoration: inherit;">Identity<wbr>Validation<wbr>Expression</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">string</span>
    </dt>
    <dd>A regular expression for validating the token as the incoming identity. It only invokes the
authorizer's lambda if there is a match, else it will return a 401. This does not apply to
REQUEST Lambda Authorizers. Example: &quot;^x-[a-z]+&quot;.</dd><dt class="property-optional"
            title="Optional">
        <span id="methodstoauthorize_go">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#methodstoauthorize_go" style="color: inherit; text-decoration: inherit;">Methods<wbr>To<wbr>Authorize</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">[]string</span>
    </dt>
    <dd>For method authorization, you can define resource servers and custom scopes by specifying the
&quot;resource-server/scope&quot;. e.g. [&quot;com.hamuta.movies/drama.view&quot;,
&quot;http://my.resource.com/file.read&quot;] For more information on resource servers and custom
scopes visit the AWS documentation -
https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pools-define-resource-servers.html</dd><dt class="property-optional"
            title="Optional">
        <span id="parameterlocation_go">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#parameterlocation_go" style="color: inherit; text-decoration: inherit;">Parameter<wbr>Location</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">string</span>
    </dt>
    <dd>Defines where in the request API Gateway should look for identity information. The value must
be &quot;header&quot; or &quot;query&quot;. If there are multiple identity sources, the value must be &quot;header&quot;.</dd><dt class="property-optional"
            title="Optional">
        <span id="providerarns_go">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#providerarns_go" style="color: inherit; text-decoration: inherit;">Provider<wbr>ARNs</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">[]string</span>
    </dt>
    <dd>The ARNs of the Cognito User Pools to use.</dd><dt class="property-optional"
            title="Optional">
        <span id="type_go">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#type_go" style="color: inherit; text-decoration: inherit;">Type</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">string</span>
    </dt>
    <dd>The type of the authorizer. This value must be one of the following:</p>
<ul>
<li>&quot;token&quot;, for an authorizer with the caller identity embedded in an authorization token</li>
<li>&quot;request&quot;, for an authorizer with the caller identity contained in request parameters</li>
</ul></dd></dl>
</pulumi-choosable>
</div>

<div>
<pulumi-choosable type="language" values="java">
<dl class="resources-properties"><dt class="property-required"
            title="Required">
        <span id="parametername_java">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#parametername_java" style="color: inherit; text-decoration: inherit;">parameter<wbr>Name</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">String</span>
    </dt>
    <dd>parameterName is the name of the header or query parameter containing the authorization
token. Must be &quot;Unused&quot; for multiple identity sources.</dd><dt class="property-optional"
            title="Optional">
        <span id="authtype_java">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#authtype_java" style="color: inherit; text-decoration: inherit;">auth<wbr>Type</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">String</span>
    </dt>
    <dd>Specifies the authorization mechanism for the client. Typical values are &quot;oauth2&quot; or &quot;custom&quot;.</dd><dt class="property-optional"
            title="Optional">
        <span id="authorizername_java">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#authorizername_java" style="color: inherit; text-decoration: inherit;">authorizer<wbr>Name</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">String</span>
    </dt>
    <dd>The name for the Authorizer to be referenced as. This must be unique for each unique
authorizer within the API. If no name if specified, a name will be generated for you.</dd><dt class="property-optional"
            title="Optional">
        <span id="authorizerresultttlinseconds_java">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#authorizerresultttlinseconds_java" style="color: inherit; text-decoration: inherit;">authorizer<wbr>Result<wbr>Ttl<wbr>In<wbr>Seconds</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">Double</span>
    </dt>
    <dd>The number of seconds during which the resulting IAM policy is cached. Default is 300s. You
can set this value to 0 to disable caching. Max value is 3600s. Note - if you are sharing an
authorizer across more than one route you will want to disable the cache or else it will
cause problems for you.</dd><dt class="property-optional"
            title="Optional">
        <span id="handler_java">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#handler_java" style="color: inherit; text-decoration: inherit;">handler</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">Function</span>
    </dt>
    <dd><p>The authorizerHandler specifies information about the authorizing Lambda.</p>
<p>This type is defined in the <a href="/registry/packages/aws">AWS Classic</a> package.</p>
</dd><dt class="property-optional"
            title="Optional">
        <span id="identitysource_java">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#identitysource_java" style="color: inherit; text-decoration: inherit;">identity<wbr>Source</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">List&lt;String&gt;</span>
    </dt>
    <dd>List of mapping expressions of the request parameters as the identity source. This indicates
where in the request identity information is expected. Applicable for the authorizer of the
&quot;request&quot; type only. Example: [&quot;method.request.header.HeaderAuth1&quot;,
&quot;method.request.querystring.QueryString1&quot;]</dd><dt class="property-optional"
            title="Optional">
        <span id="identityvalidationexpression_java">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#identityvalidationexpression_java" style="color: inherit; text-decoration: inherit;">identity<wbr>Validation<wbr>Expression</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">String</span>
    </dt>
    <dd>A regular expression for validating the token as the incoming identity. It only invokes the
authorizer's lambda if there is a match, else it will return a 401. This does not apply to
REQUEST Lambda Authorizers. Example: &quot;^x-[a-z]+&quot;.</dd><dt class="property-optional"
            title="Optional">
        <span id="methodstoauthorize_java">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#methodstoauthorize_java" style="color: inherit; text-decoration: inherit;">methods<wbr>To<wbr>Authorize</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">List&lt;String&gt;</span>
    </dt>
    <dd>For method authorization, you can define resource servers and custom scopes by specifying the
&quot;resource-server/scope&quot;. e.g. [&quot;com.hamuta.movies/drama.view&quot;,
&quot;http://my.resource.com/file.read&quot;] For more information on resource servers and custom
scopes visit the AWS documentation -
https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pools-define-resource-servers.html</dd><dt class="property-optional"
            title="Optional">
        <span id="parameterlocation_java">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#parameterlocation_java" style="color: inherit; text-decoration: inherit;">parameter<wbr>Location</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">String</span>
    </dt>
    <dd>Defines where in the request API Gateway should look for identity information. The value must
be &quot;header&quot; or &quot;query&quot;. If there are multiple identity sources, the value must be &quot;header&quot;.</dd><dt class="property-optional"
            title="Optional">
        <span id="providerarns_java">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#providerarns_java" style="color: inherit; text-decoration: inherit;">provider<wbr>ARNs</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">List&lt;String&gt;</span>
    </dt>
    <dd>The ARNs of the Cognito User Pools to use.</dd><dt class="property-optional"
            title="Optional">
        <span id="type_java">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#type_java" style="color: inherit; text-decoration: inherit;">type</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">String</span>
    </dt>
    <dd>The type of the authorizer. This value must be one of the following:</p>
<ul>
<li>&quot;token&quot;, for an authorizer with the caller identity embedded in an authorization token</li>
<li>&quot;request&quot;, for an authorizer with the caller identity contained in request parameters</li>
</ul></dd></dl>
</pulumi-choosable>
</div>

<div>
<pulumi-choosable type="language" values="javascript,typescript">
<dl class="resources-properties"><dt class="property-required"
            title="Required">
        <span id="parametername_nodejs">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#parametername_nodejs" style="color: inherit; text-decoration: inherit;">parameter<wbr>Name</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">string</span>
    </dt>
    <dd>parameterName is the name of the header or query parameter containing the authorization
token. Must be &quot;Unused&quot; for multiple identity sources.</dd><dt class="property-optional"
            title="Optional">
        <span id="authtype_nodejs">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#authtype_nodejs" style="color: inherit; text-decoration: inherit;">auth<wbr>Type</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">string</span>
    </dt>
    <dd>Specifies the authorization mechanism for the client. Typical values are &quot;oauth2&quot; or &quot;custom&quot;.</dd><dt class="property-optional"
            title="Optional">
        <span id="authorizername_nodejs">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#authorizername_nodejs" style="color: inherit; text-decoration: inherit;">authorizer<wbr>Name</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">string</span>
    </dt>
    <dd>The name for the Authorizer to be referenced as. This must be unique for each unique
authorizer within the API. If no name if specified, a name will be generated for you.</dd><dt class="property-optional"
            title="Optional">
        <span id="authorizerresultttlinseconds_nodejs">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#authorizerresultttlinseconds_nodejs" style="color: inherit; text-decoration: inherit;">authorizer<wbr>Result<wbr>Ttl<wbr>In<wbr>Seconds</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">number</span>
    </dt>
    <dd>The number of seconds during which the resulting IAM policy is cached. Default is 300s. You
can set this value to 0 to disable caching. Max value is 3600s. Note - if you are sharing an
authorizer across more than one route you will want to disable the cache or else it will
cause problems for you.</dd><dt class="property-optional"
            title="Optional">
        <span id="handler_nodejs">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#handler_nodejs" style="color: inherit; text-decoration: inherit;">handler</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">pulumi<wbr>Awslambda<wbr>Function</span>
    </dt>
    <dd><p>The authorizerHandler specifies information about the authorizing Lambda.</p>
<p>This type is defined in the <a href="/registry/packages/aws">AWS Classic</a> package.</p>
</dd><dt class="property-optional"
            title="Optional">
        <span id="identitysource_nodejs">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#identitysource_nodejs" style="color: inherit; text-decoration: inherit;">identity<wbr>Source</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">string[]</span>
    </dt>
    <dd>List of mapping expressions of the request parameters as the identity source. This indicates
where in the request identity information is expected. Applicable for the authorizer of the
&quot;request&quot; type only. Example: [&quot;method.request.header.HeaderAuth1&quot;,
&quot;method.request.querystring.QueryString1&quot;]</dd><dt class="property-optional"
            title="Optional">
        <span id="identityvalidationexpression_nodejs">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#identityvalidationexpression_nodejs" style="color: inherit; text-decoration: inherit;">identity<wbr>Validation<wbr>Expression</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">string</span>
    </dt>
    <dd>A regular expression for validating the token as the incoming identity. It only invokes the
authorizer's lambda if there is a match, else it will return a 401. This does not apply to
REQUEST Lambda Authorizers. Example: &quot;^x-[a-z]+&quot;.</dd><dt class="property-optional"
            title="Optional">
        <span id="methodstoauthorize_nodejs">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#methodstoauthorize_nodejs" style="color: inherit; text-decoration: inherit;">methods<wbr>To<wbr>Authorize</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">string[]</span>
    </dt>
    <dd>For method authorization, you can define resource servers and custom scopes by specifying the
&quot;resource-server/scope&quot;. e.g. [&quot;com.hamuta.movies/drama.view&quot;,
&quot;http://my.resource.com/file.read&quot;] For more information on resource servers and custom
scopes visit the AWS documentation -
https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pools-define-resource-servers.html</dd><dt class="property-optional"
            title="Optional">
        <span id="parameterlocation_nodejs">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#parameterlocation_nodejs" style="color: inherit; text-decoration: inherit;">parameter<wbr>Location</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">string</span>
    </dt>
    <dd>Defines where in the request API Gateway should look for identity information. The value must
be &quot;header&quot; or &quot;query&quot;. If there are multiple identity sources, the value must be &quot;header&quot;.</dd><dt class="property-optional"
            title="Optional">
        <span id="providerarns_nodejs">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#providerarns_nodejs" style="color: inherit; text-decoration: inherit;">provider<wbr>ARNs</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">string[]</span>
    </dt>
    <dd>The ARNs of the Cognito User Pools to use.</dd><dt class="property-optional"
            title="Optional">
        <span id="type_nodejs">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#type_nodejs" style="color: inherit; text-decoration: inherit;">type</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">string</span>
    </dt>
    <dd>The type of the authorizer. This value must be one of the following:</p>
<ul>
<li>&quot;token&quot;, for an authorizer with the caller identity embedded in an authorization token</li>
<li>&quot;request&quot;, for an authorizer with the caller identity contained in request parameters</li>
</ul></dd></dl>
</pulumi-choosable>
</div>

<div>
<pulumi-choosable type="language" values="python">
<dl class="resources-properties"><dt class="property-required"
            title="Required">
        <span id="parameter_name_python">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#parameter_name_python" style="color: inherit; text-decoration: inherit;">parameter_<wbr>name</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">str</span>
    </dt>
    <dd>parameterName is the name of the header or query parameter containing the authorization
token. Must be &quot;Unused&quot; for multiple identity sources.</dd><dt class="property-optional"
            title="Optional">
        <span id="auth_type_python">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#auth_type_python" style="color: inherit; text-decoration: inherit;">auth_<wbr>type</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">str</span>
    </dt>
    <dd>Specifies the authorization mechanism for the client. Typical values are &quot;oauth2&quot; or &quot;custom&quot;.</dd><dt class="property-optional"
            title="Optional">
        <span id="authorizer_name_python">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#authorizer_name_python" style="color: inherit; text-decoration: inherit;">authorizer_<wbr>name</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">str</span>
    </dt>
    <dd>The name for the Authorizer to be referenced as. This must be unique for each unique
authorizer within the API. If no name if specified, a name will be generated for you.</dd><dt class="property-optional"
            title="Optional">
        <span id="authorizer_result_ttl_in_seconds_python">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#authorizer_result_ttl_in_seconds_python" style="color: inherit; text-decoration: inherit;">authorizer_<wbr>result_<wbr>ttl_<wbr>in_<wbr>seconds</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">float</span>
    </dt>
    <dd>The number of seconds during which the resulting IAM policy is cached. Default is 300s. You
can set this value to 0 to disable caching. Max value is 3600s. Note - if you are sharing an
authorizer across more than one route you will want to disable the cache or else it will
cause problems for you.</dd><dt class="property-optional"
            title="Optional">
        <span id="handler_python">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#handler_python" style="color: inherit; text-decoration: inherit;">handler</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">pulumi_<wbr>aws.lambda_.<wbr>Function</span>
    </dt>
    <dd><p>The authorizerHandler specifies information about the authorizing Lambda.</p>
<p>This type is defined in the <a href="/registry/packages/aws">AWS Classic</a> package.</p>
</dd><dt class="property-optional"
            title="Optional">
        <span id="identity_source_python">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#identity_source_python" style="color: inherit; text-decoration: inherit;">identity_<wbr>source</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">Sequence[str]</span>
    </dt>
    <dd>List of mapping expressions of the request parameters as the identity source. This indicates
where in the request identity information is expected. Applicable for the authorizer of the
&quot;request&quot; type only. Example: [&quot;method.request.header.HeaderAuth1&quot;,
&quot;method.request.querystring.QueryString1&quot;]</dd><dt class="property-optional"
            title="Optional">
        <span id="identity_validation_expression_python">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#identity_validation_expression_python" style="color: inherit; text-decoration: inherit;">identity_<wbr>validation_<wbr>expression</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">str</span>
    </dt>
    <dd>A regular expression for validating the token as the incoming identity. It only invokes the
authorizer's lambda if there is a match, else it will return a 401. This does not apply to
REQUEST Lambda Authorizers. Example: &quot;^x-[a-z]+&quot;.</dd><dt class="property-optional"
            title="Optional">
        <span id="methods_to_authorize_python">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#methods_to_authorize_python" style="color: inherit; text-decoration: inherit;">methods_<wbr>to_<wbr>authorize</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">Sequence[str]</span>
    </dt>
    <dd>For method authorization, you can define resource servers and custom scopes by specifying the
&quot;resource-server/scope&quot;. e.g. [&quot;com.hamuta.movies/drama.view&quot;,
&quot;http://my.resource.com/file.read&quot;] For more information on resource servers and custom
scopes visit the AWS documentation -
https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pools-define-resource-servers.html</dd><dt class="property-optional"
            title="Optional">
        <span id="parameter_location_python">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#parameter_location_python" style="color: inherit; text-decoration: inherit;">parameter_<wbr>location</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">str</span>
    </dt>
    <dd>Defines where in the request API Gateway should look for identity information. The value must
be &quot;header&quot; or &quot;query&quot;. If there are multiple identity sources, the value must be &quot;header&quot;.</dd><dt class="property-optional"
            title="Optional">
        <span id="provider_arns_python">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#provider_arns_python" style="color: inherit; text-decoration: inherit;">provider_<wbr>arns</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">Sequence[str]</span>
    </dt>
    <dd>The ARNs of the Cognito User Pools to use.</dd><dt class="property-optional"
            title="Optional">
        <span id="type_python">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#type_python" style="color: inherit; text-decoration: inherit;">type</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">str</span>
    </dt>
    <dd>The type of the authorizer. This value must be one of the following:</p>
<ul>
<li>&quot;token&quot;, for an authorizer with the caller identity embedded in an authorization token</li>
<li>&quot;request&quot;, for an authorizer with the caller identity contained in request parameters</li>
</ul></dd></dl>
</pulumi-choosable>
</div>

<div>
<pulumi-choosable type="language" values="yaml">
<dl class="resources-properties"><dt class="property-required"
            title="Required">
        <span id="parametername_yaml">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#parametername_yaml" style="color: inherit; text-decoration: inherit;">parameter<wbr>Name</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">String</span>
    </dt>
    <dd>parameterName is the name of the header or query parameter containing the authorization
token. Must be &quot;Unused&quot; for multiple identity sources.</dd><dt class="property-optional"
            title="Optional">
        <span id="authtype_yaml">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#authtype_yaml" style="color: inherit; text-decoration: inherit;">auth<wbr>Type</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">String</span>
    </dt>
    <dd>Specifies the authorization mechanism for the client. Typical values are &quot;oauth2&quot; or &quot;custom&quot;.</dd><dt class="property-optional"
            title="Optional">
        <span id="authorizername_yaml">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#authorizername_yaml" style="color: inherit; text-decoration: inherit;">authorizer<wbr>Name</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">String</span>
    </dt>
    <dd>The name for the Authorizer to be referenced as. This must be unique for each unique
authorizer within the API. If no name if specified, a name will be generated for you.</dd><dt class="property-optional"
            title="Optional">
        <span id="authorizerresultttlinseconds_yaml">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#authorizerresultttlinseconds_yaml" style="color: inherit; text-decoration: inherit;">authorizer<wbr>Result<wbr>Ttl<wbr>In<wbr>Seconds</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">Number</span>
    </dt>
    <dd>The number of seconds during which the resulting IAM policy is cached. Default is 300s. You
can set this value to 0 to disable caching. Max value is 3600s. Note - if you are sharing an
authorizer across more than one route you will want to disable the cache or else it will
cause problems for you.</dd><dt class="property-optional"
            title="Optional">
        <span id="handler_yaml">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#handler_yaml" style="color: inherit; text-decoration: inherit;">handler</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">aws:lambda:Function</span>
    </dt>
    <dd><p>The authorizerHandler specifies information about the authorizing Lambda.</p>
<p>This type is defined in the <a href="/registry/packages/aws">AWS Classic</a> package.</p>
</dd><dt class="property-optional"
            title="Optional">
        <span id="identitysource_yaml">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#identitysource_yaml" style="color: inherit; text-decoration: inherit;">identity<wbr>Source</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">List&lt;String&gt;</span>
    </dt>
    <dd>List of mapping expressions of the request parameters as the identity source. This indicates
where in the request identity information is expected. Applicable for the authorizer of the
&quot;request&quot; type only. Example: [&quot;method.request.header.HeaderAuth1&quot;,
&quot;method.request.querystring.QueryString1&quot;]</dd><dt class="property-optional"
            title="Optional">
        <span id="identityvalidationexpression_yaml">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#identityvalidationexpression_yaml" style="color: inherit; text-decoration: inherit;">identity<wbr>Validation<wbr>Expression</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">String</span>
    </dt>
    <dd>A regular expression for validating the token as the incoming identity. It only invokes the
authorizer's lambda if there is a match, else it will return a 401. This does not apply to
REQUEST Lambda Authorizers. Example: &quot;^x-[a-z]+&quot;.</dd><dt class="property-optional"
            title="Optional">
        <span id="methodstoauthorize_yaml">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#methodstoauthorize_yaml" style="color: inherit; text-decoration: inherit;">methods<wbr>To<wbr>Authorize</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">List&lt;String&gt;</span>
    </dt>
    <dd>For method authorization, you can define resource servers and custom scopes by specifying the
&quot;resource-server/scope&quot;. e.g. [&quot;com.hamuta.movies/drama.view&quot;,
&quot;http://my.resource.com/file.read&quot;] For more information on resource servers and custom
scopes visit the AWS documentation -
https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pools-define-resource-servers.html</dd><dt class="property-optional"
            title="Optional">
        <span id="parameterlocation_yaml">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#parameterlocation_yaml" style="color: inherit; text-decoration: inherit;">parameter<wbr>Location</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">String</span>
    </dt>
    <dd>Defines where in the request API Gateway should look for identity information. The value must
be &quot;header&quot; or &quot;query&quot;. If there are multiple identity sources, the value must be &quot;header&quot;.</dd><dt class="property-optional"
            title="Optional">
        <span id="providerarns_yaml">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#providerarns_yaml" style="color: inherit; text-decoration: inherit;">provider<wbr>ARNs</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">List&lt;String&gt;</span>
    </dt>
    <dd>The ARNs of the Cognito User Pools to use.</dd><dt class="property-optional"
            title="Optional">
        <span id="type_yaml">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#type_yaml" style="color: inherit; text-decoration: inherit;">type</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">String</span>
    </dt>
    <dd>The type of the authorizer. This value must be one of the following:</p>
<ul>
<li>&quot;token&quot;, for an authorizer with the caller identity embedded in an authorization token</li>
<li>&quot;request&quot;, for an authorizer with the caller identity contained in request parameters</li>
</ul></dd></dl>
</pulumi-choosable>
</div>

<h4 id="integrationconnectiontype">
Integration<wbr>Connection<wbr>Type<pulumi-choosable type="language" values="python,go" class="inline">, Integration<wbr>Connection<wbr>Type<wbr>Args</pulumi-choosable>
</h4>

<div>
<pulumi-choosable type="language" values="csharp">
<dl class="tabular"><dt>INTERNET</dt>
    <dd>INTERNET</dd><dt>VPC_LINK</dt>
    <dd>VPC_LINK</dd></dl>
</pulumi-choosable>
</div>

<div>
<pulumi-choosable type="language" values="go">
<dl class="tabular"><dt>Integration<wbr>Connection<wbr>Type<wbr>INTERNET</dt>
    <dd>INTERNET</dd><dt>Integration<wbr>Connection<wbr>Type_VPC_LINK</dt>
    <dd>VPC_LINK</dd></dl>
</pulumi-choosable>
</div>

<div>
<pulumi-choosable type="language" values="java">
<dl class="tabular"><dt>INTERNET</dt>
    <dd>INTERNET</dd><dt>VPC_LINK</dt>
    <dd>VPC_LINK</dd></dl>
</pulumi-choosable>
</div>

<div>
<pulumi-choosable type="language" values="javascript,typescript">
<dl class="tabular"><dt>INTERNET</dt>
    <dd>INTERNET</dd><dt>VPC_LINK</dt>
    <dd>VPC_LINK</dd></dl>
</pulumi-choosable>
</div>

<div>
<pulumi-choosable type="language" values="python">
<dl class="tabular"><dt>INTERNET</dt>
    <dd>INTERNET</dd><dt>VP_C_LINK</dt>
    <dd>VPC_LINK</dd></dl>
</pulumi-choosable>
</div>

<div>
<pulumi-choosable type="language" values="yaml">
<dl class="tabular"><dt>"INTERNET"</dt>
    <dd>INTERNET</dd><dt>"VPC_LINK"</dt>
    <dd>VPC_LINK</dd></dl>
</pulumi-choosable>
</div>

<h4 id="integrationpassthroughbehavior">
Integration<wbr>Passthrough<wbr>Behavior<pulumi-choosable type="language" values="python,go" class="inline">, Integration<wbr>Passthrough<wbr>Behavior<wbr>Args</pulumi-choosable>
</h4>

<div>
<pulumi-choosable type="language" values="csharp">
<dl class="tabular"><dt>When_<wbr>no_<wbr>match</dt>
    <dd>when_no_match</dd><dt>When_<wbr>no_<wbr>templates</dt>
    <dd>when_no_templates</dd><dt>Never</dt>
    <dd>never</dd></dl>
</pulumi-choosable>
</div>

<div>
<pulumi-choosable type="language" values="go">
<dl class="tabular"><dt>Integration<wbr>Passthrough<wbr>Behavior_When_<wbr>no_<wbr>match</dt>
    <dd>when_no_match</dd><dt>Integration<wbr>Passthrough<wbr>Behavior_When_<wbr>no_<wbr>templates</dt>
    <dd>when_no_templates</dd><dt>Integration<wbr>Passthrough<wbr>Behavior<wbr>Never</dt>
    <dd>never</dd></dl>
</pulumi-choosable>
</div>

<div>
<pulumi-choosable type="language" values="java">
<dl class="tabular"><dt>When_<wbr>no_<wbr>match</dt>
    <dd>when_no_match</dd><dt>When_<wbr>no_<wbr>templates</dt>
    <dd>when_no_templates</dd><dt>Never</dt>
    <dd>never</dd></dl>
</pulumi-choosable>
</div>

<div>
<pulumi-choosable type="language" values="javascript,typescript">
<dl class="tabular"><dt>When_<wbr>no_<wbr>match</dt>
    <dd>when_no_match</dd><dt>When_<wbr>no_<wbr>templates</dt>
    <dd>when_no_templates</dd><dt>Never</dt>
    <dd>never</dd></dl>
</pulumi-choosable>
</div>

<div>
<pulumi-choosable type="language" values="python">
<dl class="tabular"><dt>WHEN_NO_MATCH</dt>
    <dd>when_no_match</dd><dt>WHEN_NO_TEMPLATES</dt>
    <dd>when_no_templates</dd><dt>NEVER</dt>
    <dd>never</dd></dl>
</pulumi-choosable>
</div>

<div>
<pulumi-choosable type="language" values="yaml">
<dl class="tabular"><dt>"when_<wbr>no_<wbr>match"</dt>
    <dd>when_no_match</dd><dt>"when_<wbr>no_<wbr>templates"</dt>
    <dd>when_no_templates</dd><dt>"never"</dt>
    <dd>never</dd></dl>
</pulumi-choosable>
</div>

<h4 id="integrationtype">
Integration<wbr>Type<pulumi-choosable type="language" values="python,go" class="inline">, Integration<wbr>Type<wbr>Args</pulumi-choosable>
</h4>

<div>
<pulumi-choosable type="language" values="csharp">
<dl class="tabular"><dt>Aws</dt>
    <dd>aws</dd><dt>Aws_<wbr>proxy</dt>
    <dd>aws_proxy</dd><dt>Http</dt>
    <dd>http</dd><dt>Http_<wbr>proxy</dt>
    <dd>http_proxy</dd><dt>Mock</dt>
    <dd>mock</dd></dl>
</pulumi-choosable>
</div>

<div>
<pulumi-choosable type="language" values="go">
<dl class="tabular"><dt>Integration<wbr>Type<wbr>Aws</dt>
    <dd>aws</dd><dt>Integration<wbr>Type_Aws_<wbr>proxy</dt>
    <dd>aws_proxy</dd><dt>Integration<wbr>Type<wbr>Http</dt>
    <dd>http</dd><dt>Integration<wbr>Type_Http_<wbr>proxy</dt>
    <dd>http_proxy</dd><dt>Integration<wbr>Type<wbr>Mock</dt>
    <dd>mock</dd></dl>
</pulumi-choosable>
</div>

<div>
<pulumi-choosable type="language" values="java">
<dl class="tabular"><dt>Aws</dt>
    <dd>aws</dd><dt>Aws_<wbr>proxy</dt>
    <dd>aws_proxy</dd><dt>Http</dt>
    <dd>http</dd><dt>Http_<wbr>proxy</dt>
    <dd>http_proxy</dd><dt>Mock</dt>
    <dd>mock</dd></dl>
</pulumi-choosable>
</div>

<div>
<pulumi-choosable type="language" values="javascript,typescript">
<dl class="tabular"><dt>Aws</dt>
    <dd>aws</dd><dt>Aws_<wbr>proxy</dt>
    <dd>aws_proxy</dd><dt>Http</dt>
    <dd>http</dd><dt>Http_<wbr>proxy</dt>
    <dd>http_proxy</dd><dt>Mock</dt>
    <dd>mock</dd></dl>
</pulumi-choosable>
</div>

<div>
<pulumi-choosable type="language" values="python">
<dl class="tabular"><dt>AWS</dt>
    <dd>aws</dd><dt>AWS_PROXY</dt>
    <dd>aws_proxy</dd><dt>HTTP</dt>
    <dd>http</dd><dt>HTTP_PROXY</dt>
    <dd>http_proxy</dd><dt>MOCK</dt>
    <dd>mock</dd></dl>
</pulumi-choosable>
</div>

<div>
<pulumi-choosable type="language" values="yaml">
<dl class="tabular"><dt>"aws"</dt>
    <dd>aws</dd><dt>"aws_<wbr>proxy"</dt>
    <dd>aws_proxy</dd><dt>"http"</dt>
    <dd>http</dd><dt>"http_<wbr>proxy"</dt>
    <dd>http_proxy</dd><dt>"mock"</dt>
    <dd>mock</dd></dl>
</pulumi-choosable>
</div>

<h4 id="method">
Method<pulumi-choosable type="language" values="python,go" class="inline">, Method<wbr>Args</pulumi-choosable>
</h4>

<div>
<pulumi-choosable type="language" values="csharp">
<dl class="tabular"><dt>ANY</dt>
    <dd>ANY</dd><dt>GET</dt>
    <dd>GET</dd><dt>PUT</dt>
    <dd>PUT</dd><dt>POST</dt>
    <dd>POST</dd><dt>DELETE</dt>
    <dd>DELETE</dd><dt>PATCH</dt>
    <dd>PATCH</dd><dt>OPTIONS</dt>
    <dd>OPTIONS</dd><dt>HEAD</dt>
    <dd>HEAD</dd></dl>
</pulumi-choosable>
</div>

<div>
<pulumi-choosable type="language" values="go">
<dl class="tabular"><dt>Method<wbr>ANY</dt>
    <dd>ANY</dd><dt>Method<wbr>GET</dt>
    <dd>GET</dd><dt>Method<wbr>PUT</dt>
    <dd>PUT</dd><dt>Method<wbr>POST</dt>
    <dd>POST</dd><dt>Method<wbr>DELETE</dt>
    <dd>DELETE</dd><dt>Method<wbr>PATCH</dt>
    <dd>PATCH</dd><dt>Method<wbr>OPTIONS</dt>
    <dd>OPTIONS</dd><dt>Method<wbr>HEAD</dt>
    <dd>HEAD</dd></dl>
</pulumi-choosable>
</div>

<div>
<pulumi-choosable type="language" values="java">
<dl class="tabular"><dt>ANY</dt>
    <dd>ANY</dd><dt>GET</dt>
    <dd>GET</dd><dt>PUT</dt>
    <dd>PUT</dd><dt>POST</dt>
    <dd>POST</dd><dt>DELETE</dt>
    <dd>DELETE</dd><dt>PATCH</dt>
    <dd>PATCH</dd><dt>OPTIONS</dt>
    <dd>OPTIONS</dd><dt>HEAD</dt>
    <dd>HEAD</dd></dl>
</pulumi-choosable>
</div>

<div>
<pulumi-choosable type="language" values="javascript,typescript">
<dl class="tabular"><dt>ANY</dt>
    <dd>ANY</dd><dt>GET</dt>
    <dd>GET</dd><dt>PUT</dt>
    <dd>PUT</dd><dt>POST</dt>
    <dd>POST</dd><dt>DELETE</dt>
    <dd>DELETE</dd><dt>PATCH</dt>
    <dd>PATCH</dd><dt>OPTIONS</dt>
    <dd>OPTIONS</dd><dt>HEAD</dt>
    <dd>HEAD</dd></dl>
</pulumi-choosable>
</div>

<div>
<pulumi-choosable type="language" values="python">
<dl class="tabular"><dt>ANY</dt>
    <dd>ANY</dd><dt>GET</dt>
    <dd>GET</dd><dt>PUT</dt>
    <dd>PUT</dd><dt>POST</dt>
    <dd>POST</dd><dt>DELETE</dt>
    <dd>DELETE</dd><dt>PATCH</dt>
    <dd>PATCH</dd><dt>OPTIONS</dt>
    <dd>OPTIONS</dd><dt>HEAD</dt>
    <dd>HEAD</dd></dl>
</pulumi-choosable>
</div>

<div>
<pulumi-choosable type="language" values="yaml">
<dl class="tabular"><dt>"ANY"</dt>
    <dd>ANY</dd><dt>"GET"</dt>
    <dd>GET</dd><dt>"PUT"</dt>
    <dd>PUT</dd><dt>"POST"</dt>
    <dd>POST</dd><dt>"DELETE"</dt>
    <dd>DELETE</dd><dt>"PATCH"</dt>
    <dd>PATCH</dd><dt>"OPTIONS"</dt>
    <dd>OPTIONS</dd><dt>"HEAD"</dt>
    <dd>HEAD</dd></dl>
</pulumi-choosable>
</div>

<h4 id="requestvalidator">
Request<wbr>Validator<pulumi-choosable type="language" values="python,go" class="inline">, Request<wbr>Validator<wbr>Args</pulumi-choosable>
</h4>

<div>
<pulumi-choosable type="language" values="csharp">
<dl class="tabular"><dt>ALL</dt>
    <dd>ALL</dd><dt>PARAMS_ONLY</dt>
    <dd>PARAMS_ONLY</dd><dt>BODY_ONLY</dt>
    <dd>BODY_ONLY</dd></dl>
</pulumi-choosable>
</div>

<div>
<pulumi-choosable type="language" values="go">
<dl class="tabular"><dt>Request<wbr>Validator<wbr>ALL</dt>
    <dd>ALL</dd><dt>Request<wbr>Validator_PARAMS_ONLY</dt>
    <dd>PARAMS_ONLY</dd><dt>Request<wbr>Validator_BODY_ONLY</dt>
    <dd>BODY_ONLY</dd></dl>
</pulumi-choosable>
</div>

<div>
<pulumi-choosable type="language" values="java">
<dl class="tabular"><dt>ALL</dt>
    <dd>ALL</dd><dt>PARAMS_ONLY</dt>
    <dd>PARAMS_ONLY</dd><dt>BODY_ONLY</dt>
    <dd>BODY_ONLY</dd></dl>
</pulumi-choosable>
</div>

<div>
<pulumi-choosable type="language" values="javascript,typescript">
<dl class="tabular"><dt>ALL</dt>
    <dd>ALL</dd><dt>PARAMS_ONLY</dt>
    <dd>PARAMS_ONLY</dd><dt>BODY_ONLY</dt>
    <dd>BODY_ONLY</dd></dl>
</pulumi-choosable>
</div>

<div>
<pulumi-choosable type="language" values="python">
<dl class="tabular"><dt>ALL</dt>
    <dd>ALL</dd><dt>PARAM_S_ONLY</dt>
    <dd>PARAMS_ONLY</dd><dt>BOD_Y_ONLY</dt>
    <dd>BODY_ONLY</dd></dl>
</pulumi-choosable>
</div>

<div>
<pulumi-choosable type="language" values="yaml">
<dl class="tabular"><dt>"ALL"</dt>
    <dd>ALL</dd><dt>"PARAMS_ONLY"</dt>
    <dd>PARAMS_ONLY</dd><dt>"BODY_ONLY"</dt>
    <dd>BODY_ONLY</dd></dl>
</pulumi-choosable>
</div>

<h4 id="requiredparameter">
Required<wbr>Parameter<pulumi-choosable type="language" values="python,go" class="inline">, Required<wbr>Parameter<wbr>Args</pulumi-choosable>
</h4>

<div>
<pulumi-choosable type="language" values="csharp">
<dl class="resources-properties"><dt class="property-optional"
            title="Optional">
        <span id="in_csharp">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#in_csharp" style="color: inherit; text-decoration: inherit;">In</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">string</span>
    </dt>
    <dd></dd><dt class="property-optional"
            title="Optional">
        <span id="name_csharp">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#name_csharp" style="color: inherit; text-decoration: inherit;">Name</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">string</span>
    </dt>
    <dd></dd></dl>
</pulumi-choosable>
</div>

<div>
<pulumi-choosable type="language" values="go">
<dl class="resources-properties"><dt class="property-optional"
            title="Optional">
        <span id="in_go">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#in_go" style="color: inherit; text-decoration: inherit;">In</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">string</span>
    </dt>
    <dd></dd><dt class="property-optional"
            title="Optional">
        <span id="name_go">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#name_go" style="color: inherit; text-decoration: inherit;">Name</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">string</span>
    </dt>
    <dd></dd></dl>
</pulumi-choosable>
</div>

<div>
<pulumi-choosable type="language" values="java">
<dl class="resources-properties"><dt class="property-optional"
            title="Optional">
        <span id="in_java">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#in_java" style="color: inherit; text-decoration: inherit;">in</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">String</span>
    </dt>
    <dd></dd><dt class="property-optional"
            title="Optional">
        <span id="name_java">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#name_java" style="color: inherit; text-decoration: inherit;">name</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">String</span>
    </dt>
    <dd></dd></dl>
</pulumi-choosable>
</div>

<div>
<pulumi-choosable type="language" values="javascript,typescript">
<dl class="resources-properties"><dt class="property-optional"
            title="Optional">
        <span id="in_nodejs">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#in_nodejs" style="color: inherit; text-decoration: inherit;">in</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">string</span>
    </dt>
    <dd></dd><dt class="property-optional"
            title="Optional">
        <span id="name_nodejs">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#name_nodejs" style="color: inherit; text-decoration: inherit;">name</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">string</span>
    </dt>
    <dd></dd></dl>
</pulumi-choosable>
</div>

<div>
<pulumi-choosable type="language" values="python">
<dl class="resources-properties"><dt class="property-optional"
            title="Optional">
        <span id="in__python">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#in__python" style="color: inherit; text-decoration: inherit;">in_</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">str</span>
    </dt>
    <dd></dd><dt class="property-optional"
            title="Optional">
        <span id="name_python">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#name_python" style="color: inherit; text-decoration: inherit;">name</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">str</span>
    </dt>
    <dd></dd></dl>
</pulumi-choosable>
</div>

<div>
<pulumi-choosable type="language" values="yaml">
<dl class="resources-properties"><dt class="property-optional"
            title="Optional">
        <span id="in_yaml">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#in_yaml" style="color: inherit; text-decoration: inherit;">in</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">String</span>
    </dt>
    <dd></dd><dt class="property-optional"
            title="Optional">
        <span id="name_yaml">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#name_yaml" style="color: inherit; text-decoration: inherit;">name</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">String</span>
    </dt>
    <dd></dd></dl>
</pulumi-choosable>
</div>

<h4 id="route">
Route<pulumi-choosable type="language" values="python,go" class="inline">, Route<wbr>Args</pulumi-choosable>
</h4>

<div>
<pulumi-choosable type="language" values="csharp">
<dl class="resources-properties"><dt class="property-required"
            title="Required">
        <span id="path_csharp">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#path_csharp" style="color: inherit; text-decoration: inherit;">Path</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">string</span>
    </dt>
    <dd>The path on the API that will serve this route.  If not prefixed with <code>/</code>,
then a <code>/</code> will be added automatically to the beginning.</dd><dt class="property-optional"
            title="Optional">
        <span id="apikeyrequired_csharp">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#apikeyrequired_csharp" style="color: inherit; text-decoration: inherit;">Api<wbr>Key<wbr>Required</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">bool</span>
    </dt>
    <dd>If true, an API key will be required for this route. The source for the API Key can be set at
the API level and by default, the source will be the HEADER.</dd><dt class="property-optional"
            title="Optional">
        <span id="authorizers_csharp">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#authorizers_csharp" style="color: inherit; text-decoration: inherit;">Authorizers</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type"><a href="#authorizer">List&lt;Pulumi.<wbr>Aws<wbr>Api<wbr>Gateway.<wbr>Inputs.<wbr>Authorizer&gt;</a></span>
    </dt>
    <dd>Authorizers allows you to define Lambda authorizers be applied for authorization when the
the route is called.</dd><dt class="property-optional"
            title="Optional">
        <span id="contenttype_csharp">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#contenttype_csharp" style="color: inherit; text-decoration: inherit;">Content<wbr>Type</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">string</span>
    </dt>
    <dd>The <code>content-type</code> to serve the file as.  Only valid when <code>localPath</code> points to a file.  If
<code>localPath</code> points to a directory, the content types for all files will be inferred.</dd><dt class="property-optional"
            title="Optional">
        <span id="data_csharp">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#data_csharp" style="color: inherit; text-decoration: inherit;">Data</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">object</span>
    </dt>
    <dd>A raw Swagger object to include verbatim in the integration for this path.</dd><dt class="property-optional"
            title="Optional">
        <span id="eventhandler_csharp">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#eventhandler_csharp" style="color: inherit; text-decoration: inherit;">Event<wbr>Handler</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">Pulumi.<wbr>Aws.<wbr>Lambda.<wbr>Function</span>
    </dt>
    <dd><p>A Lambda function which will handle the route for the given path and method.</p>
<p>This type is defined in the <a href="/registry/packages/aws">AWS Classic</a> package.</p>
</dd><dt class="property-optional"
            title="Optional">
        <span id="iamauthenabled_csharp">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#iamauthenabled_csharp" style="color: inherit; text-decoration: inherit;">Iam<wbr>Auth<wbr>Enabled</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">bool</span>
    </dt>
    <dd>By default, the route method auth type is set to <code>NONE</code>. If true, the auth type will be
set to <code>AWS_IAM</code>.</dd><dt class="property-optional"
            title="Optional">
        <span id="index_csharp">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#index_csharp" style="color: inherit; text-decoration: inherit;">Index</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">string | bool</span>
    </dt>
    <dd>By default a <code>localPath</code> hosting static content will also serve 'index.html' in response to a request on a directory.
To disable this pass <code>false</code> or supply a new index document name.</dd><dt class="property-optional"
            title="Optional">
        <span id="localpath_csharp">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#localpath_csharp" style="color: inherit; text-decoration: inherit;">Local<wbr>Path</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">string</span>
    </dt>
    <dd>The local path on disk to create static S3 resources for.  Files will be uploaded into S3
objects, and directories will be recursively walked into.</dd><dt class="property-optional"
            title="Optional">
        <span id="method_csharp">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#method_csharp" style="color: inherit; text-decoration: inherit;">Method</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type"><a href="#method">Pulumi.<wbr>Aws<wbr>Api<wbr>Gateway.<wbr>Method</a></span>
    </dt>
    <dd>The REST method of the route to match.  Only valid with <code>eventHandler</code> or <code>data</code> routes.</dd><dt class="property-optional"
            title="Optional">
        <span id="requestvalidator_csharp">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#requestvalidator_csharp" style="color: inherit; text-decoration: inherit;">Request<wbr>Validator</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type"><a href="#requestvalidator">Pulumi.<wbr>Aws<wbr>Api<wbr>Gateway.<wbr>Request<wbr>Validator</a></span>
    </dt>
    <dd>Request Validator specifies the validator to use at the method level. This will override anything
defined at the API level.</dd><dt class="property-optional"
            title="Optional">
        <span id="requiredparameters_csharp">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#requiredparameters_csharp" style="color: inherit; text-decoration: inherit;">Required<wbr>Parameters</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type"><a href="#requiredparameter">List&lt;Pulumi.<wbr>Aws<wbr>Api<wbr>Gateway.<wbr>Inputs.<wbr>Required<wbr>Parameter&gt;</a></span>
    </dt>
    <dd>Required Parameters to validate. If the request validator is set to ALL or PARAMS_ONLY, api
gateway will validate these before sending traffic to the event handler.</dd><dt class="property-optional"
            title="Optional">
        <span id="target_csharp">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#target_csharp" style="color: inherit; text-decoration: inherit;">Target</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type"><a href="#target">Pulumi.<wbr>Aws<wbr>Api<wbr>Gateway.<wbr>Inputs.<wbr>Target</a></span>
    </dt>
    <dd>The target for an integration route (see https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-api-integration-types.html).</dd></dl>
</pulumi-choosable>
</div>

<div>
<pulumi-choosable type="language" values="go">
<dl class="resources-properties"><dt class="property-required"
            title="Required">
        <span id="path_go">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#path_go" style="color: inherit; text-decoration: inherit;">Path</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">string</span>
    </dt>
    <dd>The path on the API that will serve this route.  If not prefixed with <code>/</code>,
then a <code>/</code> will be added automatically to the beginning.</dd><dt class="property-optional"
            title="Optional">
        <span id="apikeyrequired_go">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#apikeyrequired_go" style="color: inherit; text-decoration: inherit;">Api<wbr>Key<wbr>Required</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">bool</span>
    </dt>
    <dd>If true, an API key will be required for this route. The source for the API Key can be set at
the API level and by default, the source will be the HEADER.</dd><dt class="property-optional"
            title="Optional">
        <span id="authorizers_go">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#authorizers_go" style="color: inherit; text-decoration: inherit;">Authorizers</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type"><a href="#authorizer">[]Authorizer</a></span>
    </dt>
    <dd>Authorizers allows you to define Lambda authorizers be applied for authorization when the
the route is called.</dd><dt class="property-optional"
            title="Optional">
        <span id="contenttype_go">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#contenttype_go" style="color: inherit; text-decoration: inherit;">Content<wbr>Type</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">string</span>
    </dt>
    <dd>The <code>content-type</code> to serve the file as.  Only valid when <code>localPath</code> points to a file.  If
<code>localPath</code> points to a directory, the content types for all files will be inferred.</dd><dt class="property-optional"
            title="Optional">
        <span id="data_go">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#data_go" style="color: inherit; text-decoration: inherit;">Data</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">interface{}</span>
    </dt>
    <dd>A raw Swagger object to include verbatim in the integration for this path.</dd><dt class="property-optional"
            title="Optional">
        <span id="eventhandler_go">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#eventhandler_go" style="color: inherit; text-decoration: inherit;">Event<wbr>Handler</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">Function</span>
    </dt>
    <dd><p>A Lambda function which will handle the route for the given path and method.</p>
<p>This type is defined in the <a href="/registry/packages/aws">AWS Classic</a> package.</p>
</dd><dt class="property-optional"
            title="Optional">
        <span id="iamauthenabled_go">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#iamauthenabled_go" style="color: inherit; text-decoration: inherit;">Iam<wbr>Auth<wbr>Enabled</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">bool</span>
    </dt>
    <dd>By default, the route method auth type is set to <code>NONE</code>. If true, the auth type will be
set to <code>AWS_IAM</code>.</dd><dt class="property-optional"
            title="Optional">
        <span id="index_go">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#index_go" style="color: inherit; text-decoration: inherit;">Index</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">string | bool</span>
    </dt>
    <dd>By default a <code>localPath</code> hosting static content will also serve 'index.html' in response to a request on a directory.
To disable this pass <code>false</code> or supply a new index document name.</dd><dt class="property-optional"
            title="Optional">
        <span id="localpath_go">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#localpath_go" style="color: inherit; text-decoration: inherit;">Local<wbr>Path</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">string</span>
    </dt>
    <dd>The local path on disk to create static S3 resources for.  Files will be uploaded into S3
objects, and directories will be recursively walked into.</dd><dt class="property-optional"
            title="Optional">
        <span id="method_go">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#method_go" style="color: inherit; text-decoration: inherit;">Method</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type"><a href="#method">Method</a></span>
    </dt>
    <dd>The REST method of the route to match.  Only valid with <code>eventHandler</code> or <code>data</code> routes.</dd><dt class="property-optional"
            title="Optional">
        <span id="requestvalidator_go">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#requestvalidator_go" style="color: inherit; text-decoration: inherit;">Request<wbr>Validator</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type"><a href="#requestvalidator">Request<wbr>Validator</a></span>
    </dt>
    <dd>Request Validator specifies the validator to use at the method level. This will override anything
defined at the API level.</dd><dt class="property-optional"
            title="Optional">
        <span id="requiredparameters_go">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#requiredparameters_go" style="color: inherit; text-decoration: inherit;">Required<wbr>Parameters</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type"><a href="#requiredparameter">[]Required<wbr>Parameter</a></span>
    </dt>
    <dd>Required Parameters to validate. If the request validator is set to ALL or PARAMS_ONLY, api
gateway will validate these before sending traffic to the event handler.</dd><dt class="property-optional"
            title="Optional">
        <span id="target_go">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#target_go" style="color: inherit; text-decoration: inherit;">Target</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type"><a href="#target">Target</a></span>
    </dt>
    <dd>The target for an integration route (see https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-api-integration-types.html).</dd></dl>
</pulumi-choosable>
</div>

<div>
<pulumi-choosable type="language" values="java">
<dl class="resources-properties"><dt class="property-required"
            title="Required">
        <span id="path_java">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#path_java" style="color: inherit; text-decoration: inherit;">path</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">String</span>
    </dt>
    <dd>The path on the API that will serve this route.  If not prefixed with <code>/</code>,
then a <code>/</code> will be added automatically to the beginning.</dd><dt class="property-optional"
            title="Optional">
        <span id="apikeyrequired_java">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#apikeyrequired_java" style="color: inherit; text-decoration: inherit;">api<wbr>Key<wbr>Required</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">Boolean</span>
    </dt>
    <dd>If true, an API key will be required for this route. The source for the API Key can be set at
the API level and by default, the source will be the HEADER.</dd><dt class="property-optional"
            title="Optional">
        <span id="authorizers_java">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#authorizers_java" style="color: inherit; text-decoration: inherit;">authorizers</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type"><a href="#authorizer">List&lt;Authorizer&gt;</a></span>
    </dt>
    <dd>Authorizers allows you to define Lambda authorizers be applied for authorization when the
the route is called.</dd><dt class="property-optional"
            title="Optional">
        <span id="contenttype_java">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#contenttype_java" style="color: inherit; text-decoration: inherit;">content<wbr>Type</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">String</span>
    </dt>
    <dd>The <code>content-type</code> to serve the file as.  Only valid when <code>localPath</code> points to a file.  If
<code>localPath</code> points to a directory, the content types for all files will be inferred.</dd><dt class="property-optional"
            title="Optional">
        <span id="data_java">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#data_java" style="color: inherit; text-decoration: inherit;">data</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">Object</span>
    </dt>
    <dd>A raw Swagger object to include verbatim in the integration for this path.</dd><dt class="property-optional"
            title="Optional">
        <span id="eventhandler_java">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#eventhandler_java" style="color: inherit; text-decoration: inherit;">event<wbr>Handler</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">Function</span>
    </dt>
    <dd><p>A Lambda function which will handle the route for the given path and method.</p>
<p>This type is defined in the <a href="/registry/packages/aws">AWS Classic</a> package.</p>
</dd><dt class="property-optional"
            title="Optional">
        <span id="iamauthenabled_java">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#iamauthenabled_java" style="color: inherit; text-decoration: inherit;">iam<wbr>Auth<wbr>Enabled</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">Boolean</span>
    </dt>
    <dd>By default, the route method auth type is set to <code>NONE</code>. If true, the auth type will be
set to <code>AWS_IAM</code>.</dd><dt class="property-optional"
            title="Optional">
        <span id="index_java">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#index_java" style="color: inherit; text-decoration: inherit;">index</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">String | Boolean</span>
    </dt>
    <dd>By default a <code>localPath</code> hosting static content will also serve 'index.html' in response to a request on a directory.
To disable this pass <code>false</code> or supply a new index document name.</dd><dt class="property-optional"
            title="Optional">
        <span id="localpath_java">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#localpath_java" style="color: inherit; text-decoration: inherit;">local<wbr>Path</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">String</span>
    </dt>
    <dd>The local path on disk to create static S3 resources for.  Files will be uploaded into S3
objects, and directories will be recursively walked into.</dd><dt class="property-optional"
            title="Optional">
        <span id="method_java">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#method_java" style="color: inherit; text-decoration: inherit;">method</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type"><a href="#method">Method</a></span>
    </dt>
    <dd>The REST method of the route to match.  Only valid with <code>eventHandler</code> or <code>data</code> routes.</dd><dt class="property-optional"
            title="Optional">
        <span id="requestvalidator_java">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#requestvalidator_java" style="color: inherit; text-decoration: inherit;">request<wbr>Validator</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type"><a href="#requestvalidator">Request<wbr>Validator</a></span>
    </dt>
    <dd>Request Validator specifies the validator to use at the method level. This will override anything
defined at the API level.</dd><dt class="property-optional"
            title="Optional">
        <span id="requiredparameters_java">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#requiredparameters_java" style="color: inherit; text-decoration: inherit;">required<wbr>Parameters</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type"><a href="#requiredparameter">List&lt;Required<wbr>Parameter&gt;</a></span>
    </dt>
    <dd>Required Parameters to validate. If the request validator is set to ALL or PARAMS_ONLY, api
gateway will validate these before sending traffic to the event handler.</dd><dt class="property-optional"
            title="Optional">
        <span id="target_java">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#target_java" style="color: inherit; text-decoration: inherit;">target</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type"><a href="#target">Target</a></span>
    </dt>
    <dd>The target for an integration route (see https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-api-integration-types.html).</dd></dl>
</pulumi-choosable>
</div>

<div>
<pulumi-choosable type="language" values="javascript,typescript">
<dl class="resources-properties"><dt class="property-required"
            title="Required">
        <span id="path_nodejs">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#path_nodejs" style="color: inherit; text-decoration: inherit;">path</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">string</span>
    </dt>
    <dd>The path on the API that will serve this route.  If not prefixed with <code>/</code>,
then a <code>/</code> will be added automatically to the beginning.</dd><dt class="property-optional"
            title="Optional">
        <span id="apikeyrequired_nodejs">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#apikeyrequired_nodejs" style="color: inherit; text-decoration: inherit;">api<wbr>Key<wbr>Required</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">boolean</span>
    </dt>
    <dd>If true, an API key will be required for this route. The source for the API Key can be set at
the API level and by default, the source will be the HEADER.</dd><dt class="property-optional"
            title="Optional">
        <span id="authorizers_nodejs">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#authorizers_nodejs" style="color: inherit; text-decoration: inherit;">authorizers</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type"><a href="#authorizer">Authorizer[]</a></span>
    </dt>
    <dd>Authorizers allows you to define Lambda authorizers be applied for authorization when the
the route is called.</dd><dt class="property-optional"
            title="Optional">
        <span id="contenttype_nodejs">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#contenttype_nodejs" style="color: inherit; text-decoration: inherit;">content<wbr>Type</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">string</span>
    </dt>
    <dd>The <code>content-type</code> to serve the file as.  Only valid when <code>localPath</code> points to a file.  If
<code>localPath</code> points to a directory, the content types for all files will be inferred.</dd><dt class="property-optional"
            title="Optional">
        <span id="data_nodejs">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#data_nodejs" style="color: inherit; text-decoration: inherit;">data</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">any</span>
    </dt>
    <dd>A raw Swagger object to include verbatim in the integration for this path.</dd><dt class="property-optional"
            title="Optional">
        <span id="eventhandler_nodejs">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#eventhandler_nodejs" style="color: inherit; text-decoration: inherit;">event<wbr>Handler</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">pulumi<wbr>Awslambda<wbr>Function</span>
    </dt>
    <dd><p>A Lambda function which will handle the route for the given path and method.</p>
<p>This type is defined in the <a href="/registry/packages/aws">AWS Classic</a> package.</p>
</dd><dt class="property-optional"
            title="Optional">
        <span id="iamauthenabled_nodejs">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#iamauthenabled_nodejs" style="color: inherit; text-decoration: inherit;">iam<wbr>Auth<wbr>Enabled</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">boolean</span>
    </dt>
    <dd>By default, the route method auth type is set to <code>NONE</code>. If true, the auth type will be
set to <code>AWS_IAM</code>.</dd><dt class="property-optional"
            title="Optional">
        <span id="index_nodejs">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#index_nodejs" style="color: inherit; text-decoration: inherit;">index</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">string | boolean</span>
    </dt>
    <dd>By default a <code>localPath</code> hosting static content will also serve 'index.html' in response to a request on a directory.
To disable this pass <code>false</code> or supply a new index document name.</dd><dt class="property-optional"
            title="Optional">
        <span id="localpath_nodejs">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#localpath_nodejs" style="color: inherit; text-decoration: inherit;">local<wbr>Path</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">string</span>
    </dt>
    <dd>The local path on disk to create static S3 resources for.  Files will be uploaded into S3
objects, and directories will be recursively walked into.</dd><dt class="property-optional"
            title="Optional">
        <span id="method_nodejs">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#method_nodejs" style="color: inherit; text-decoration: inherit;">method</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type"><a href="#method">Method</a></span>
    </dt>
    <dd>The REST method of the route to match.  Only valid with <code>eventHandler</code> or <code>data</code> routes.</dd><dt class="property-optional"
            title="Optional">
        <span id="requestvalidator_nodejs">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#requestvalidator_nodejs" style="color: inherit; text-decoration: inherit;">request<wbr>Validator</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type"><a href="#requestvalidator">Request<wbr>Validator</a></span>
    </dt>
    <dd>Request Validator specifies the validator to use at the method level. This will override anything
defined at the API level.</dd><dt class="property-optional"
            title="Optional">
        <span id="requiredparameters_nodejs">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#requiredparameters_nodejs" style="color: inherit; text-decoration: inherit;">required<wbr>Parameters</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type"><a href="#requiredparameter">Required<wbr>Parameter[]</a></span>
    </dt>
    <dd>Required Parameters to validate. If the request validator is set to ALL or PARAMS_ONLY, api
gateway will validate these before sending traffic to the event handler.</dd><dt class="property-optional"
            title="Optional">
        <span id="target_nodejs">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#target_nodejs" style="color: inherit; text-decoration: inherit;">target</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type"><a href="#target">Target</a></span>
    </dt>
    <dd>The target for an integration route (see https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-api-integration-types.html).</dd></dl>
</pulumi-choosable>
</div>

<div>
<pulumi-choosable type="language" values="python">
<dl class="resources-properties"><dt class="property-required"
            title="Required">
        <span id="path_python">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#path_python" style="color: inherit; text-decoration: inherit;">path</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">str</span>
    </dt>
    <dd>The path on the API that will serve this route.  If not prefixed with <code>/</code>,
then a <code>/</code> will be added automatically to the beginning.</dd><dt class="property-optional"
            title="Optional">
        <span id="api_key_required_python">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#api_key_required_python" style="color: inherit; text-decoration: inherit;">api_<wbr>key_<wbr>required</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">bool</span>
    </dt>
    <dd>If true, an API key will be required for this route. The source for the API Key can be set at
the API level and by default, the source will be the HEADER.</dd><dt class="property-optional"
            title="Optional">
        <span id="authorizers_python">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#authorizers_python" style="color: inherit; text-decoration: inherit;">authorizers</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type"><a href="#authorizer">Sequence[Authorizer]</a></span>
    </dt>
    <dd>Authorizers allows you to define Lambda authorizers be applied for authorization when the
the route is called.</dd><dt class="property-optional"
            title="Optional">
        <span id="content_type_python">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#content_type_python" style="color: inherit; text-decoration: inherit;">content_<wbr>type</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">str</span>
    </dt>
    <dd>The <code>content-type</code> to serve the file as.  Only valid when <code>localPath</code> points to a file.  If
<code>localPath</code> points to a directory, the content types for all files will be inferred.</dd><dt class="property-optional"
            title="Optional">
        <span id="data_python">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#data_python" style="color: inherit; text-decoration: inherit;">data</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">Any</span>
    </dt>
    <dd>A raw Swagger object to include verbatim in the integration for this path.</dd><dt class="property-optional"
            title="Optional">
        <span id="event_handler_python">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#event_handler_python" style="color: inherit; text-decoration: inherit;">event_<wbr>handler</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">pulumi_<wbr>aws.lambda_.<wbr>Function</span>
    </dt>
    <dd><p>A Lambda function which will handle the route for the given path and method.</p>
<p>This type is defined in the <a href="/registry/packages/aws">AWS Classic</a> package.</p>
</dd><dt class="property-optional"
            title="Optional">
        <span id="iam_auth_enabled_python">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#iam_auth_enabled_python" style="color: inherit; text-decoration: inherit;">iam_<wbr>auth_<wbr>enabled</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">bool</span>
    </dt>
    <dd>By default, the route method auth type is set to <code>NONE</code>. If true, the auth type will be
set to <code>AWS_IAM</code>.</dd><dt class="property-optional"
            title="Optional">
        <span id="index_python">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#index_python" style="color: inherit; text-decoration: inherit;">index</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">str | bool</span>
    </dt>
    <dd>By default a <code>localPath</code> hosting static content will also serve 'index.html' in response to a request on a directory.
To disable this pass <code>false</code> or supply a new index document name.</dd><dt class="property-optional"
            title="Optional">
        <span id="local_path_python">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#local_path_python" style="color: inherit; text-decoration: inherit;">local_<wbr>path</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">str</span>
    </dt>
    <dd>The local path on disk to create static S3 resources for.  Files will be uploaded into S3
objects, and directories will be recursively walked into.</dd><dt class="property-optional"
            title="Optional">
        <span id="method_python">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#method_python" style="color: inherit; text-decoration: inherit;">method</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type"><a href="#method">Method</a></span>
    </dt>
    <dd>The REST method of the route to match.  Only valid with <code>eventHandler</code> or <code>data</code> routes.</dd><dt class="property-optional"
            title="Optional">
        <span id="request_validator_python">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#request_validator_python" style="color: inherit; text-decoration: inherit;">request_<wbr>validator</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type"><a href="#requestvalidator">Request<wbr>Validator</a></span>
    </dt>
    <dd>Request Validator specifies the validator to use at the method level. This will override anything
defined at the API level.</dd><dt class="property-optional"
            title="Optional">
        <span id="required_parameters_python">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#required_parameters_python" style="color: inherit; text-decoration: inherit;">required_<wbr>parameters</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type"><a href="#requiredparameter">Sequence[Required<wbr>Parameter]</a></span>
    </dt>
    <dd>Required Parameters to validate. If the request validator is set to ALL or PARAMS_ONLY, api
gateway will validate these before sending traffic to the event handler.</dd><dt class="property-optional"
            title="Optional">
        <span id="target_python">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#target_python" style="color: inherit; text-decoration: inherit;">target</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type"><a href="#target">Target</a></span>
    </dt>
    <dd>The target for an integration route (see https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-api-integration-types.html).</dd></dl>
</pulumi-choosable>
</div>

<div>
<pulumi-choosable type="language" values="yaml">
<dl class="resources-properties"><dt class="property-required"
            title="Required">
        <span id="path_yaml">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#path_yaml" style="color: inherit; text-decoration: inherit;">path</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">String</span>
    </dt>
    <dd>The path on the API that will serve this route.  If not prefixed with <code>/</code>,
then a <code>/</code> will be added automatically to the beginning.</dd><dt class="property-optional"
            title="Optional">
        <span id="apikeyrequired_yaml">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#apikeyrequired_yaml" style="color: inherit; text-decoration: inherit;">api<wbr>Key<wbr>Required</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">Boolean</span>
    </dt>
    <dd>If true, an API key will be required for this route. The source for the API Key can be set at
the API level and by default, the source will be the HEADER.</dd><dt class="property-optional"
            title="Optional">
        <span id="authorizers_yaml">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#authorizers_yaml" style="color: inherit; text-decoration: inherit;">authorizers</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type"><a href="#authorizer">List&lt;Property Map&gt;</a></span>
    </dt>
    <dd>Authorizers allows you to define Lambda authorizers be applied for authorization when the
the route is called.</dd><dt class="property-optional"
            title="Optional">
        <span id="contenttype_yaml">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#contenttype_yaml" style="color: inherit; text-decoration: inherit;">content<wbr>Type</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">String</span>
    </dt>
    <dd>The <code>content-type</code> to serve the file as.  Only valid when <code>localPath</code> points to a file.  If
<code>localPath</code> points to a directory, the content types for all files will be inferred.</dd><dt class="property-optional"
            title="Optional">
        <span id="data_yaml">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#data_yaml" style="color: inherit; text-decoration: inherit;">data</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">Any</span>
    </dt>
    <dd>A raw Swagger object to include verbatim in the integration for this path.</dd><dt class="property-optional"
            title="Optional">
        <span id="eventhandler_yaml">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#eventhandler_yaml" style="color: inherit; text-decoration: inherit;">event<wbr>Handler</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">aws:lambda:Function</span>
    </dt>
    <dd><p>A Lambda function which will handle the route for the given path and method.</p>
<p>This type is defined in the <a href="/registry/packages/aws">AWS Classic</a> package.</p>
</dd><dt class="property-optional"
            title="Optional">
        <span id="iamauthenabled_yaml">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#iamauthenabled_yaml" style="color: inherit; text-decoration: inherit;">iam<wbr>Auth<wbr>Enabled</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">Boolean</span>
    </dt>
    <dd>By default, the route method auth type is set to <code>NONE</code>. If true, the auth type will be
set to <code>AWS_IAM</code>.</dd><dt class="property-optional"
            title="Optional">
        <span id="index_yaml">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#index_yaml" style="color: inherit; text-decoration: inherit;">index</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">String | Boolean</span>
    </dt>
    <dd>By default a <code>localPath</code> hosting static content will also serve 'index.html' in response to a request on a directory.
To disable this pass <code>false</code> or supply a new index document name.</dd><dt class="property-optional"
            title="Optional">
        <span id="localpath_yaml">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#localpath_yaml" style="color: inherit; text-decoration: inherit;">local<wbr>Path</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">String</span>
    </dt>
    <dd>The local path on disk to create static S3 resources for.  Files will be uploaded into S3
objects, and directories will be recursively walked into.</dd><dt class="property-optional"
            title="Optional">
        <span id="method_yaml">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#method_yaml" style="color: inherit; text-decoration: inherit;">method</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type"><a href="#method">&#34;ANY&#34; | &#34;GET&#34; | &#34;PUT&#34; | &#34;POST&#34; | &#34;DELETE&#34; | &#34;PATCH&#34; | &#34;OPTIONS&#34; | &#34;HEAD&#34;</a></span>
    </dt>
    <dd>The REST method of the route to match.  Only valid with <code>eventHandler</code> or <code>data</code> routes.</dd><dt class="property-optional"
            title="Optional">
        <span id="requestvalidator_yaml">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#requestvalidator_yaml" style="color: inherit; text-decoration: inherit;">request<wbr>Validator</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type"><a href="#requestvalidator">&#34;ALL&#34; | &#34;PARAMS_ONLY&#34; | &#34;BODY_ONLY&#34;</a></span>
    </dt>
    <dd>Request Validator specifies the validator to use at the method level. This will override anything
defined at the API level.</dd><dt class="property-optional"
            title="Optional">
        <span id="requiredparameters_yaml">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#requiredparameters_yaml" style="color: inherit; text-decoration: inherit;">required<wbr>Parameters</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type"><a href="#requiredparameter">List&lt;Property Map&gt;</a></span>
    </dt>
    <dd>Required Parameters to validate. If the request validator is set to ALL or PARAMS_ONLY, api
gateway will validate these before sending traffic to the event handler.</dd><dt class="property-optional"
            title="Optional">
        <span id="target_yaml">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#target_yaml" style="color: inherit; text-decoration: inherit;">target</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type"><a href="#target">Property Map</a></span>
    </dt>
    <dd>The target for an integration route (see https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-api-integration-types.html).</dd></dl>
</pulumi-choosable>
</div>

<h4 id="swaggergatewayresponse">
Swagger<wbr>Gateway<wbr>Response<pulumi-choosable type="language" values="python,go" class="inline">, Swagger<wbr>Gateway<wbr>Response<wbr>Args</pulumi-choosable>
</h4>

<div>
<pulumi-choosable type="language" values="csharp">
<dl class="resources-properties"><dt class="property-optional"
            title="Optional">
        <span id="responseparameters_csharp">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#responseparameters_csharp" style="color: inherit; text-decoration: inherit;">Response<wbr>Parameters</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">Dictionary&lt;string, string&gt;</span>
    </dt>
    <dd></dd><dt class="property-optional"
            title="Optional">
        <span id="responsetemplates_csharp">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#responsetemplates_csharp" style="color: inherit; text-decoration: inherit;">Response<wbr>Templates</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">Dictionary&lt;string, string&gt;</span>
    </dt>
    <dd></dd><dt class="property-optional"
            title="Optional">
        <span id="statuscode_csharp">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#statuscode_csharp" style="color: inherit; text-decoration: inherit;">Status<wbr>Code</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">double</span>
    </dt>
    <dd></dd></dl>
</pulumi-choosable>
</div>

<div>
<pulumi-choosable type="language" values="go">
<dl class="resources-properties"><dt class="property-optional"
            title="Optional">
        <span id="responseparameters_go">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#responseparameters_go" style="color: inherit; text-decoration: inherit;">Response<wbr>Parameters</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">map[string]string</span>
    </dt>
    <dd></dd><dt class="property-optional"
            title="Optional">
        <span id="responsetemplates_go">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#responsetemplates_go" style="color: inherit; text-decoration: inherit;">Response<wbr>Templates</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">map[string]string</span>
    </dt>
    <dd></dd><dt class="property-optional"
            title="Optional">
        <span id="statuscode_go">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#statuscode_go" style="color: inherit; text-decoration: inherit;">Status<wbr>Code</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">float64</span>
    </dt>
    <dd></dd></dl>
</pulumi-choosable>
</div>

<div>
<pulumi-choosable type="language" values="java">
<dl class="resources-properties"><dt class="property-optional"
            title="Optional">
        <span id="responseparameters_java">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#responseparameters_java" style="color: inherit; text-decoration: inherit;">response<wbr>Parameters</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">Map&lt;String,String&gt;</span>
    </dt>
    <dd></dd><dt class="property-optional"
            title="Optional">
        <span id="responsetemplates_java">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#responsetemplates_java" style="color: inherit; text-decoration: inherit;">response<wbr>Templates</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">Map&lt;String,String&gt;</span>
    </dt>
    <dd></dd><dt class="property-optional"
            title="Optional">
        <span id="statuscode_java">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#statuscode_java" style="color: inherit; text-decoration: inherit;">status<wbr>Code</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">Double</span>
    </dt>
    <dd></dd></dl>
</pulumi-choosable>
</div>

<div>
<pulumi-choosable type="language" values="javascript,typescript">
<dl class="resources-properties"><dt class="property-optional"
            title="Optional">
        <span id="responseparameters_nodejs">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#responseparameters_nodejs" style="color: inherit; text-decoration: inherit;">response<wbr>Parameters</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">{[key: string]: string}</span>
    </dt>
    <dd></dd><dt class="property-optional"
            title="Optional">
        <span id="responsetemplates_nodejs">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#responsetemplates_nodejs" style="color: inherit; text-decoration: inherit;">response<wbr>Templates</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">{[key: string]: string}</span>
    </dt>
    <dd></dd><dt class="property-optional"
            title="Optional">
        <span id="statuscode_nodejs">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#statuscode_nodejs" style="color: inherit; text-decoration: inherit;">status<wbr>Code</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">number</span>
    </dt>
    <dd></dd></dl>
</pulumi-choosable>
</div>

<div>
<pulumi-choosable type="language" values="python">
<dl class="resources-properties"><dt class="property-optional"
            title="Optional">
        <span id="response_parameters_python">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#response_parameters_python" style="color: inherit; text-decoration: inherit;">response_<wbr>parameters</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">Mapping[str, str]</span>
    </dt>
    <dd></dd><dt class="property-optional"
            title="Optional">
        <span id="response_templates_python">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#response_templates_python" style="color: inherit; text-decoration: inherit;">response_<wbr>templates</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">Mapping[str, str]</span>
    </dt>
    <dd></dd><dt class="property-optional"
            title="Optional">
        <span id="status_code_python">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#status_code_python" style="color: inherit; text-decoration: inherit;">status_<wbr>code</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">float</span>
    </dt>
    <dd></dd></dl>
</pulumi-choosable>
</div>

<div>
<pulumi-choosable type="language" values="yaml">
<dl class="resources-properties"><dt class="property-optional"
            title="Optional">
        <span id="responseparameters_yaml">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#responseparameters_yaml" style="color: inherit; text-decoration: inherit;">response<wbr>Parameters</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">Map&lt;String&gt;</span>
    </dt>
    <dd></dd><dt class="property-optional"
            title="Optional">
        <span id="responsetemplates_yaml">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#responsetemplates_yaml" style="color: inherit; text-decoration: inherit;">response<wbr>Templates</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">Map&lt;String&gt;</span>
    </dt>
    <dd></dd><dt class="property-optional"
            title="Optional">
        <span id="statuscode_yaml">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#statuscode_yaml" style="color: inherit; text-decoration: inherit;">status<wbr>Code</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">Number</span>
    </dt>
    <dd></dd></dl>
</pulumi-choosable>
</div>

<h4 id="target">
Target<pulumi-choosable type="language" values="python,go" class="inline">, Target<wbr>Args</pulumi-choosable>
</h4>

<div>
<pulumi-choosable type="language" values="csharp">
<dl class="resources-properties"><dt class="property-required"
            title="Required">
        <span id="type_csharp">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#type_csharp" style="color: inherit; text-decoration: inherit;">Type</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type"><a href="#integrationtype">Pulumi.<wbr>Aws<wbr>Api<wbr>Gateway.<wbr>Integration<wbr>Type</a></span>
    </dt>
    <dd><p>Specifies an API method integration type. The valid value is one of the following:</p>
<ul>
<li>
<p><code>aws</code>: for integrating the API method request with an AWS service action, including the Lambda
function-invoking action. With the Lambda function-invoking action, this is referred to as
the Lambda custom integration. With any other AWS service action, this is known as AWS
integration.</p>
</li>
<li>
<p><code>aws_proxy</code>: for integrating the API method request with the Lambda function-invoking action
with the client request passed through as-is. This integration is also referred to as the
Lambda proxy integration.</p>
</li>
<li>
<p><code>http</code>: for integrating the API method request with an HTTP endpoint, including a private HTTP
endpoint within a VPC. This integration is also referred to as the HTTP custom integration.</p>
</li>
<li>
<p><code>http_proxy</code>: for integrating the API method request with an HTTP endpoint, including a private
HTTP endpoint within a VPC, with the client request passed through as-is. This is also
referred to as the HTTP proxy integration.</p>
</li>
<li>
<p><code>mock</code>: for integrating the API method request with API Gateway as a &quot;loop-back&quot; endpoint
without invoking any backend.</p>
</li>
</ul>
</dd><dt class="property-optional"
            title="Optional">
        <span id="connectionid_csharp">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#connectionid_csharp" style="color: inherit; text-decoration: inherit;">Connection<wbr>Id</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">string</span>
    </dt>
    <dd>The (id) of the VpcLink used for the integration when connectionType=VPC_LINK and undefined,
otherwise.</dd><dt class="property-optional"
            title="Optional">
        <span id="connectiontype_csharp">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#connectiontype_csharp" style="color: inherit; text-decoration: inherit;">Connection<wbr>Type</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type"><a href="#integrationconnectiontype">Pulumi.<wbr>Aws<wbr>Api<wbr>Gateway.<wbr>Integration<wbr>Connection<wbr>Type</a></span>
    </dt>
    <dd>The type of the network connection to the integration endpoint. The valid value is <code>INTERNET</code>
for connections through the public routable internet or <code>VPC_LINK</code> for private connections
between API Gateway and a network load balancer in a VPC. The default value is <code>INTERNET</code>.</dd><dt class="property-optional"
            title="Optional">
        <span id="passthroughbehaviour_csharp">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#passthroughbehaviour_csharp" style="color: inherit; text-decoration: inherit;">Passthrough<wbr>Behaviour</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type"><a href="#integrationpassthroughbehavior">Pulumi.<wbr>Aws<wbr>Api<wbr>Gateway.<wbr>Integration<wbr>Passthrough<wbr>Behavior</a></span>
    </dt>
    <dd><p>Specifies how the method request body of an unmapped content type will be passed through the
integration request to the back end without transformation.</p>
<p>The valid value is one of the following:</p>
<ul>
<li>
<p><code>WHEN_NO_MATCH</code>: passes the method request body through the integration request to the back end
without transformation when the method request content type does not match any content type
associated with the mapping templates defined in the integration request.</p>
</li>
<li>
<p><code>WHEN_NO_TEMPLATES</code>: passes the method request body through the integration request to the back
end without transformation when no mapping template is defined in the integration request. If
a template is defined when this option is selected, the method request of an unmapped
content-type will be rejected with an HTTP 415 Unsupported Media Type response.</p>
</li>
<li>
<p><code>NEVER</code>: rejects the method request with an HTTP 415 Unsupported Media Type response when
either the method request content type does not match any content type associated with the
mapping templates defined in the integration request or no mapping template is defined in the
integration request.</p>
</li>
</ul>
<p>Defaults to <code>WHEN_NO_MATCH</code> if unspecified.</p>
</dd><dt class="property-optional"
            title="Optional">
        <span id="uri_csharp">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#uri_csharp" style="color: inherit; text-decoration: inherit;">Uri</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">string</span>
    </dt>
    <dd><p>Specifies Uniform Resource Identifier (URI) of the integration endpoint.</p>
<p>For HTTP or HTTP_PROXY integrations, the URI must be a fully formed, encoded HTTP(S) URL
according to the RFC-3986 specification, for either standard integration, where
connectionType is not VPC_LINK, or private integration, where connectionType is VPC_LINK. For
a private HTTP integration, the URI is not used for routing.</p>
<p>For AWS or AWS_PROXY integrations, the URI is of the form
arn:aws:apigateway:{region}:{subdomain.service|service}:path|action/{service_api}. Here,
{Region} is the API Gateway region (e.g., us-east-1); {service} is the name of the integrated
AWS service (e.g., s3); and {subdomain} is a designated subdomain supported by certain AWS
service for fast host-name lookup. action can be used for an AWS service action-based API,
using an Action={name}&amp;{p1}={v1}&amp;p2={v2}... query string. The ensuing {service_api} refers to
a supported action {name} plus any required input parameters. Alternatively, path can be used
for an AWS service path-based API. The ensuing service_api refers to the path to an AWS
service resource, including the region of the integrated AWS service, if applicable. For
example, for integration with the S3 API of GetObject, the uri can be either
arn:aws:apigateway:us-west-2:s3:action/GetObject&amp;Bucket={bucket}&amp;Key={key} or
arn:aws:apigateway:us-west-2:s3:path/{bucket}/{key}.</p>
</dd></dl>
</pulumi-choosable>
</div>

<div>
<pulumi-choosable type="language" values="go">
<dl class="resources-properties"><dt class="property-required"
            title="Required">
        <span id="type_go">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#type_go" style="color: inherit; text-decoration: inherit;">Type</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type"><a href="#integrationtype">Integration<wbr>Type</a></span>
    </dt>
    <dd><p>Specifies an API method integration type. The valid value is one of the following:</p>
<ul>
<li>
<p><code>aws</code>: for integrating the API method request with an AWS service action, including the Lambda
function-invoking action. With the Lambda function-invoking action, this is referred to as
the Lambda custom integration. With any other AWS service action, this is known as AWS
integration.</p>
</li>
<li>
<p><code>aws_proxy</code>: for integrating the API method request with the Lambda function-invoking action
with the client request passed through as-is. This integration is also referred to as the
Lambda proxy integration.</p>
</li>
<li>
<p><code>http</code>: for integrating the API method request with an HTTP endpoint, including a private HTTP
endpoint within a VPC. This integration is also referred to as the HTTP custom integration.</p>
</li>
<li>
<p><code>http_proxy</code>: for integrating the API method request with an HTTP endpoint, including a private
HTTP endpoint within a VPC, with the client request passed through as-is. This is also
referred to as the HTTP proxy integration.</p>
</li>
<li>
<p><code>mock</code>: for integrating the API method request with API Gateway as a &quot;loop-back&quot; endpoint
without invoking any backend.</p>
</li>
</ul>
</dd><dt class="property-optional"
            title="Optional">
        <span id="connectionid_go">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#connectionid_go" style="color: inherit; text-decoration: inherit;">Connection<wbr>Id</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">string</span>
    </dt>
    <dd>The (id) of the VpcLink used for the integration when connectionType=VPC_LINK and undefined,
otherwise.</dd><dt class="property-optional"
            title="Optional">
        <span id="connectiontype_go">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#connectiontype_go" style="color: inherit; text-decoration: inherit;">Connection<wbr>Type</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type"><a href="#integrationconnectiontype">Integration<wbr>Connection<wbr>Type</a></span>
    </dt>
    <dd>The type of the network connection to the integration endpoint. The valid value is <code>INTERNET</code>
for connections through the public routable internet or <code>VPC_LINK</code> for private connections
between API Gateway and a network load balancer in a VPC. The default value is <code>INTERNET</code>.</dd><dt class="property-optional"
            title="Optional">
        <span id="passthroughbehaviour_go">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#passthroughbehaviour_go" style="color: inherit; text-decoration: inherit;">Passthrough<wbr>Behaviour</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type"><a href="#integrationpassthroughbehavior">Integration<wbr>Passthrough<wbr>Behavior</a></span>
    </dt>
    <dd><p>Specifies how the method request body of an unmapped content type will be passed through the
integration request to the back end without transformation.</p>
<p>The valid value is one of the following:</p>
<ul>
<li>
<p><code>WHEN_NO_MATCH</code>: passes the method request body through the integration request to the back end
without transformation when the method request content type does not match any content type
associated with the mapping templates defined in the integration request.</p>
</li>
<li>
<p><code>WHEN_NO_TEMPLATES</code>: passes the method request body through the integration request to the back
end without transformation when no mapping template is defined in the integration request. If
a template is defined when this option is selected, the method request of an unmapped
content-type will be rejected with an HTTP 415 Unsupported Media Type response.</p>
</li>
<li>
<p><code>NEVER</code>: rejects the method request with an HTTP 415 Unsupported Media Type response when
either the method request content type does not match any content type associated with the
mapping templates defined in the integration request or no mapping template is defined in the
integration request.</p>
</li>
</ul>
<p>Defaults to <code>WHEN_NO_MATCH</code> if unspecified.</p>
</dd><dt class="property-optional"
            title="Optional">
        <span id="uri_go">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#uri_go" style="color: inherit; text-decoration: inherit;">Uri</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">string</span>
    </dt>
    <dd><p>Specifies Uniform Resource Identifier (URI) of the integration endpoint.</p>
<p>For HTTP or HTTP_PROXY integrations, the URI must be a fully formed, encoded HTTP(S) URL
according to the RFC-3986 specification, for either standard integration, where
connectionType is not VPC_LINK, or private integration, where connectionType is VPC_LINK. For
a private HTTP integration, the URI is not used for routing.</p>
<p>For AWS or AWS_PROXY integrations, the URI is of the form
arn:aws:apigateway:{region}:{subdomain.service|service}:path|action/{service_api}. Here,
{Region} is the API Gateway region (e.g., us-east-1); {service} is the name of the integrated
AWS service (e.g., s3); and {subdomain} is a designated subdomain supported by certain AWS
service for fast host-name lookup. action can be used for an AWS service action-based API,
using an Action={name}&amp;{p1}={v1}&amp;p2={v2}... query string. The ensuing {service_api} refers to
a supported action {name} plus any required input parameters. Alternatively, path can be used
for an AWS service path-based API. The ensuing service_api refers to the path to an AWS
service resource, including the region of the integrated AWS service, if applicable. For
example, for integration with the S3 API of GetObject, the uri can be either
arn:aws:apigateway:us-west-2:s3:action/GetObject&amp;Bucket={bucket}&amp;Key={key} or
arn:aws:apigateway:us-west-2:s3:path/{bucket}/{key}.</p>
</dd></dl>
</pulumi-choosable>
</div>

<div>
<pulumi-choosable type="language" values="java">
<dl class="resources-properties"><dt class="property-required"
            title="Required">
        <span id="type_java">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#type_java" style="color: inherit; text-decoration: inherit;">type</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type"><a href="#integrationtype">Integration<wbr>Type</a></span>
    </dt>
    <dd><p>Specifies an API method integration type. The valid value is one of the following:</p>
<ul>
<li>
<p><code>aws</code>: for integrating the API method request with an AWS service action, including the Lambda
function-invoking action. With the Lambda function-invoking action, this is referred to as
the Lambda custom integration. With any other AWS service action, this is known as AWS
integration.</p>
</li>
<li>
<p><code>aws_proxy</code>: for integrating the API method request with the Lambda function-invoking action
with the client request passed through as-is. This integration is also referred to as the
Lambda proxy integration.</p>
</li>
<li>
<p><code>http</code>: for integrating the API method request with an HTTP endpoint, including a private HTTP
endpoint within a VPC. This integration is also referred to as the HTTP custom integration.</p>
</li>
<li>
<p><code>http_proxy</code>: for integrating the API method request with an HTTP endpoint, including a private
HTTP endpoint within a VPC, with the client request passed through as-is. This is also
referred to as the HTTP proxy integration.</p>
</li>
<li>
<p><code>mock</code>: for integrating the API method request with API Gateway as a &quot;loop-back&quot; endpoint
without invoking any backend.</p>
</li>
</ul>
</dd><dt class="property-optional"
            title="Optional">
        <span id="connectionid_java">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#connectionid_java" style="color: inherit; text-decoration: inherit;">connection<wbr>Id</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">String</span>
    </dt>
    <dd>The (id) of the VpcLink used for the integration when connectionType=VPC_LINK and undefined,
otherwise.</dd><dt class="property-optional"
            title="Optional">
        <span id="connectiontype_java">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#connectiontype_java" style="color: inherit; text-decoration: inherit;">connection<wbr>Type</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type"><a href="#integrationconnectiontype">Integration<wbr>Connection<wbr>Type</a></span>
    </dt>
    <dd>The type of the network connection to the integration endpoint. The valid value is <code>INTERNET</code>
for connections through the public routable internet or <code>VPC_LINK</code> for private connections
between API Gateway and a network load balancer in a VPC. The default value is <code>INTERNET</code>.</dd><dt class="property-optional"
            title="Optional">
        <span id="passthroughbehaviour_java">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#passthroughbehaviour_java" style="color: inherit; text-decoration: inherit;">passthrough<wbr>Behaviour</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type"><a href="#integrationpassthroughbehavior">Integration<wbr>Passthrough<wbr>Behavior</a></span>
    </dt>
    <dd><p>Specifies how the method request body of an unmapped content type will be passed through the
integration request to the back end without transformation.</p>
<p>The valid value is one of the following:</p>
<ul>
<li>
<p><code>WHEN_NO_MATCH</code>: passes the method request body through the integration request to the back end
without transformation when the method request content type does not match any content type
associated with the mapping templates defined in the integration request.</p>
</li>
<li>
<p><code>WHEN_NO_TEMPLATES</code>: passes the method request body through the integration request to the back
end without transformation when no mapping template is defined in the integration request. If
a template is defined when this option is selected, the method request of an unmapped
content-type will be rejected with an HTTP 415 Unsupported Media Type response.</p>
</li>
<li>
<p><code>NEVER</code>: rejects the method request with an HTTP 415 Unsupported Media Type response when
either the method request content type does not match any content type associated with the
mapping templates defined in the integration request or no mapping template is defined in the
integration request.</p>
</li>
</ul>
<p>Defaults to <code>WHEN_NO_MATCH</code> if unspecified.</p>
</dd><dt class="property-optional"
            title="Optional">
        <span id="uri_java">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#uri_java" style="color: inherit; text-decoration: inherit;">uri</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">String</span>
    </dt>
    <dd><p>Specifies Uniform Resource Identifier (URI) of the integration endpoint.</p>
<p>For HTTP or HTTP_PROXY integrations, the URI must be a fully formed, encoded HTTP(S) URL
according to the RFC-3986 specification, for either standard integration, where
connectionType is not VPC_LINK, or private integration, where connectionType is VPC_LINK. For
a private HTTP integration, the URI is not used for routing.</p>
<p>For AWS or AWS_PROXY integrations, the URI is of the form
arn:aws:apigateway:{region}:{subdomain.service|service}:path|action/{service_api}. Here,
{Region} is the API Gateway region (e.g., us-east-1); {service} is the name of the integrated
AWS service (e.g., s3); and {subdomain} is a designated subdomain supported by certain AWS
service for fast host-name lookup. action can be used for an AWS service action-based API,
using an Action={name}&amp;{p1}={v1}&amp;p2={v2}... query string. The ensuing {service_api} refers to
a supported action {name} plus any required input parameters. Alternatively, path can be used
for an AWS service path-based API. The ensuing service_api refers to the path to an AWS
service resource, including the region of the integrated AWS service, if applicable. For
example, for integration with the S3 API of GetObject, the uri can be either
arn:aws:apigateway:us-west-2:s3:action/GetObject&amp;Bucket={bucket}&amp;Key={key} or
arn:aws:apigateway:us-west-2:s3:path/{bucket}/{key}.</p>
</dd></dl>
</pulumi-choosable>
</div>

<div>
<pulumi-choosable type="language" values="javascript,typescript">
<dl class="resources-properties"><dt class="property-required"
            title="Required">
        <span id="type_nodejs">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#type_nodejs" style="color: inherit; text-decoration: inherit;">type</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type"><a href="#integrationtype">Integration<wbr>Type</a></span>
    </dt>
    <dd><p>Specifies an API method integration type. The valid value is one of the following:</p>
<ul>
<li>
<p><code>aws</code>: for integrating the API method request with an AWS service action, including the Lambda
function-invoking action. With the Lambda function-invoking action, this is referred to as
the Lambda custom integration. With any other AWS service action, this is known as AWS
integration.</p>
</li>
<li>
<p><code>aws_proxy</code>: for integrating the API method request with the Lambda function-invoking action
with the client request passed through as-is. This integration is also referred to as the
Lambda proxy integration.</p>
</li>
<li>
<p><code>http</code>: for integrating the API method request with an HTTP endpoint, including a private HTTP
endpoint within a VPC. This integration is also referred to as the HTTP custom integration.</p>
</li>
<li>
<p><code>http_proxy</code>: for integrating the API method request with an HTTP endpoint, including a private
HTTP endpoint within a VPC, with the client request passed through as-is. This is also
referred to as the HTTP proxy integration.</p>
</li>
<li>
<p><code>mock</code>: for integrating the API method request with API Gateway as a &quot;loop-back&quot; endpoint
without invoking any backend.</p>
</li>
</ul>
</dd><dt class="property-optional"
            title="Optional">
        <span id="connectionid_nodejs">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#connectionid_nodejs" style="color: inherit; text-decoration: inherit;">connection<wbr>Id</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">string</span>
    </dt>
    <dd>The (id) of the VpcLink used for the integration when connectionType=VPC_LINK and undefined,
otherwise.</dd><dt class="property-optional"
            title="Optional">
        <span id="connectiontype_nodejs">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#connectiontype_nodejs" style="color: inherit; text-decoration: inherit;">connection<wbr>Type</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type"><a href="#integrationconnectiontype">Integration<wbr>Connection<wbr>Type</a></span>
    </dt>
    <dd>The type of the network connection to the integration endpoint. The valid value is <code>INTERNET</code>
for connections through the public routable internet or <code>VPC_LINK</code> for private connections
between API Gateway and a network load balancer in a VPC. The default value is <code>INTERNET</code>.</dd><dt class="property-optional"
            title="Optional">
        <span id="passthroughbehaviour_nodejs">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#passthroughbehaviour_nodejs" style="color: inherit; text-decoration: inherit;">passthrough<wbr>Behaviour</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type"><a href="#integrationpassthroughbehavior">Integration<wbr>Passthrough<wbr>Behavior</a></span>
    </dt>
    <dd><p>Specifies how the method request body of an unmapped content type will be passed through the
integration request to the back end without transformation.</p>
<p>The valid value is one of the following:</p>
<ul>
<li>
<p><code>WHEN_NO_MATCH</code>: passes the method request body through the integration request to the back end
without transformation when the method request content type does not match any content type
associated with the mapping templates defined in the integration request.</p>
</li>
<li>
<p><code>WHEN_NO_TEMPLATES</code>: passes the method request body through the integration request to the back
end without transformation when no mapping template is defined in the integration request. If
a template is defined when this option is selected, the method request of an unmapped
content-type will be rejected with an HTTP 415 Unsupported Media Type response.</p>
</li>
<li>
<p><code>NEVER</code>: rejects the method request with an HTTP 415 Unsupported Media Type response when
either the method request content type does not match any content type associated with the
mapping templates defined in the integration request or no mapping template is defined in the
integration request.</p>
</li>
</ul>
<p>Defaults to <code>WHEN_NO_MATCH</code> if unspecified.</p>
</dd><dt class="property-optional"
            title="Optional">
        <span id="uri_nodejs">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#uri_nodejs" style="color: inherit; text-decoration: inherit;">uri</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">string</span>
    </dt>
    <dd><p>Specifies Uniform Resource Identifier (URI) of the integration endpoint.</p>
<p>For HTTP or HTTP_PROXY integrations, the URI must be a fully formed, encoded HTTP(S) URL
according to the RFC-3986 specification, for either standard integration, where
connectionType is not VPC_LINK, or private integration, where connectionType is VPC_LINK. For
a private HTTP integration, the URI is not used for routing.</p>
<p>For AWS or AWS_PROXY integrations, the URI is of the form
arn:aws:apigateway:{region}:{subdomain.service|service}:path|action/{service_api}. Here,
{Region} is the API Gateway region (e.g., us-east-1); {service} is the name of the integrated
AWS service (e.g., s3); and {subdomain} is a designated subdomain supported by certain AWS
service for fast host-name lookup. action can be used for an AWS service action-based API,
using an Action={name}&amp;{p1}={v1}&amp;p2={v2}... query string. The ensuing {service_api} refers to
a supported action {name} plus any required input parameters. Alternatively, path can be used
for an AWS service path-based API. The ensuing service_api refers to the path to an AWS
service resource, including the region of the integrated AWS service, if applicable. For
example, for integration with the S3 API of GetObject, the uri can be either
arn:aws:apigateway:us-west-2:s3:action/GetObject&amp;Bucket={bucket}&amp;Key={key} or
arn:aws:apigateway:us-west-2:s3:path/{bucket}/{key}.</p>
</dd></dl>
</pulumi-choosable>
</div>

<div>
<pulumi-choosable type="language" values="python">
<dl class="resources-properties"><dt class="property-required"
            title="Required">
        <span id="type_python">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#type_python" style="color: inherit; text-decoration: inherit;">type</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type"><a href="#integrationtype">Integration<wbr>Type</a></span>
    </dt>
    <dd><p>Specifies an API method integration type. The valid value is one of the following:</p>
<ul>
<li>
<p><code>aws</code>: for integrating the API method request with an AWS service action, including the Lambda
function-invoking action. With the Lambda function-invoking action, this is referred to as
the Lambda custom integration. With any other AWS service action, this is known as AWS
integration.</p>
</li>
<li>
<p><code>aws_proxy</code>: for integrating the API method request with the Lambda function-invoking action
with the client request passed through as-is. This integration is also referred to as the
Lambda proxy integration.</p>
</li>
<li>
<p><code>http</code>: for integrating the API method request with an HTTP endpoint, including a private HTTP
endpoint within a VPC. This integration is also referred to as the HTTP custom integration.</p>
</li>
<li>
<p><code>http_proxy</code>: for integrating the API method request with an HTTP endpoint, including a private
HTTP endpoint within a VPC, with the client request passed through as-is. This is also
referred to as the HTTP proxy integration.</p>
</li>
<li>
<p><code>mock</code>: for integrating the API method request with API Gateway as a &quot;loop-back&quot; endpoint
without invoking any backend.</p>
</li>
</ul>
</dd><dt class="property-optional"
            title="Optional">
        <span id="connection_id_python">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#connection_id_python" style="color: inherit; text-decoration: inherit;">connection_<wbr>id</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">str</span>
    </dt>
    <dd>The (id) of the VpcLink used for the integration when connectionType=VPC_LINK and undefined,
otherwise.</dd><dt class="property-optional"
            title="Optional">
        <span id="connection_type_python">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#connection_type_python" style="color: inherit; text-decoration: inherit;">connection_<wbr>type</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type"><a href="#integrationconnectiontype">Integration<wbr>Connection<wbr>Type</a></span>
    </dt>
    <dd>The type of the network connection to the integration endpoint. The valid value is <code>INTERNET</code>
for connections through the public routable internet or <code>VPC_LINK</code> for private connections
between API Gateway and a network load balancer in a VPC. The default value is <code>INTERNET</code>.</dd><dt class="property-optional"
            title="Optional">
        <span id="passthrough_behaviour_python">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#passthrough_behaviour_python" style="color: inherit; text-decoration: inherit;">passthrough_<wbr>behaviour</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type"><a href="#integrationpassthroughbehavior">Integration<wbr>Passthrough<wbr>Behavior</a></span>
    </dt>
    <dd><p>Specifies how the method request body of an unmapped content type will be passed through the
integration request to the back end without transformation.</p>
<p>The valid value is one of the following:</p>
<ul>
<li>
<p><code>WHEN_NO_MATCH</code>: passes the method request body through the integration request to the back end
without transformation when the method request content type does not match any content type
associated with the mapping templates defined in the integration request.</p>
</li>
<li>
<p><code>WHEN_NO_TEMPLATES</code>: passes the method request body through the integration request to the back
end without transformation when no mapping template is defined in the integration request. If
a template is defined when this option is selected, the method request of an unmapped
content-type will be rejected with an HTTP 415 Unsupported Media Type response.</p>
</li>
<li>
<p><code>NEVER</code>: rejects the method request with an HTTP 415 Unsupported Media Type response when
either the method request content type does not match any content type associated with the
mapping templates defined in the integration request or no mapping template is defined in the
integration request.</p>
</li>
</ul>
<p>Defaults to <code>WHEN_NO_MATCH</code> if unspecified.</p>
</dd><dt class="property-optional"
            title="Optional">
        <span id="uri_python">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#uri_python" style="color: inherit; text-decoration: inherit;">uri</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">str</span>
    </dt>
    <dd><p>Specifies Uniform Resource Identifier (URI) of the integration endpoint.</p>
<p>For HTTP or HTTP_PROXY integrations, the URI must be a fully formed, encoded HTTP(S) URL
according to the RFC-3986 specification, for either standard integration, where
connectionType is not VPC_LINK, or private integration, where connectionType is VPC_LINK. For
a private HTTP integration, the URI is not used for routing.</p>
<p>For AWS or AWS_PROXY integrations, the URI is of the form
arn:aws:apigateway:{region}:{subdomain.service|service}:path|action/{service_api}. Here,
{Region} is the API Gateway region (e.g., us-east-1); {service} is the name of the integrated
AWS service (e.g., s3); and {subdomain} is a designated subdomain supported by certain AWS
service for fast host-name lookup. action can be used for an AWS service action-based API,
using an Action={name}&amp;{p1}={v1}&amp;p2={v2}... query string. The ensuing {service_api} refers to
a supported action {name} plus any required input parameters. Alternatively, path can be used
for an AWS service path-based API. The ensuing service_api refers to the path to an AWS
service resource, including the region of the integrated AWS service, if applicable. For
example, for integration with the S3 API of GetObject, the uri can be either
arn:aws:apigateway:us-west-2:s3:action/GetObject&amp;Bucket={bucket}&amp;Key={key} or
arn:aws:apigateway:us-west-2:s3:path/{bucket}/{key}.</p>
</dd></dl>
</pulumi-choosable>
</div>

<div>
<pulumi-choosable type="language" values="yaml">
<dl class="resources-properties"><dt class="property-required"
            title="Required">
        <span id="type_yaml">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#type_yaml" style="color: inherit; text-decoration: inherit;">type</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type"><a href="#integrationtype">&#34;aws&#34; | &#34;aws_<wbr>proxy&#34; | &#34;http&#34; | &#34;http_<wbr>proxy&#34; | &#34;mock&#34;</a></span>
    </dt>
    <dd><p>Specifies an API method integration type. The valid value is one of the following:</p>
<ul>
<li>
<p><code>aws</code>: for integrating the API method request with an AWS service action, including the Lambda
function-invoking action. With the Lambda function-invoking action, this is referred to as
the Lambda custom integration. With any other AWS service action, this is known as AWS
integration.</p>
</li>
<li>
<p><code>aws_proxy</code>: for integrating the API method request with the Lambda function-invoking action
with the client request passed through as-is. This integration is also referred to as the
Lambda proxy integration.</p>
</li>
<li>
<p><code>http</code>: for integrating the API method request with an HTTP endpoint, including a private HTTP
endpoint within a VPC. This integration is also referred to as the HTTP custom integration.</p>
</li>
<li>
<p><code>http_proxy</code>: for integrating the API method request with an HTTP endpoint, including a private
HTTP endpoint within a VPC, with the client request passed through as-is. This is also
referred to as the HTTP proxy integration.</p>
</li>
<li>
<p><code>mock</code>: for integrating the API method request with API Gateway as a &quot;loop-back&quot; endpoint
without invoking any backend.</p>
</li>
</ul>
</dd><dt class="property-optional"
            title="Optional">
        <span id="connectionid_yaml">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#connectionid_yaml" style="color: inherit; text-decoration: inherit;">connection<wbr>Id</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">String</span>
    </dt>
    <dd>The (id) of the VpcLink used for the integration when connectionType=VPC_LINK and undefined,
otherwise.</dd><dt class="property-optional"
            title="Optional">
        <span id="connectiontype_yaml">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#connectiontype_yaml" style="color: inherit; text-decoration: inherit;">connection<wbr>Type</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type"><a href="#integrationconnectiontype">&#34;INTERNET&#34; | &#34;VPC_LINK&#34;</a></span>
    </dt>
    <dd>The type of the network connection to the integration endpoint. The valid value is <code>INTERNET</code>
for connections through the public routable internet or <code>VPC_LINK</code> for private connections
between API Gateway and a network load balancer in a VPC. The default value is <code>INTERNET</code>.</dd><dt class="property-optional"
            title="Optional">
        <span id="passthroughbehaviour_yaml">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#passthroughbehaviour_yaml" style="color: inherit; text-decoration: inherit;">passthrough<wbr>Behaviour</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type"><a href="#integrationpassthroughbehavior">&#34;when_<wbr>no_<wbr>match&#34; | &#34;when_<wbr>no_<wbr>templates&#34; | &#34;never&#34;</a></span>
    </dt>
    <dd><p>Specifies how the method request body of an unmapped content type will be passed through the
integration request to the back end without transformation.</p>
<p>The valid value is one of the following:</p>
<ul>
<li>
<p><code>WHEN_NO_MATCH</code>: passes the method request body through the integration request to the back end
without transformation when the method request content type does not match any content type
associated with the mapping templates defined in the integration request.</p>
</li>
<li>
<p><code>WHEN_NO_TEMPLATES</code>: passes the method request body through the integration request to the back
end without transformation when no mapping template is defined in the integration request. If
a template is defined when this option is selected, the method request of an unmapped
content-type will be rejected with an HTTP 415 Unsupported Media Type response.</p>
</li>
<li>
<p><code>NEVER</code>: rejects the method request with an HTTP 415 Unsupported Media Type response when
either the method request content type does not match any content type associated with the
mapping templates defined in the integration request or no mapping template is defined in the
integration request.</p>
</li>
</ul>
<p>Defaults to <code>WHEN_NO_MATCH</code> if unspecified.</p>
</dd><dt class="property-optional"
            title="Optional">
        <span id="uri_yaml">
<a data-swiftype-name="resource-property" data-swiftype-type="text" href="#uri_yaml" style="color: inherit; text-decoration: inherit;">uri</a>
</span>
        <span class="property-indicator"></span>
        <span class="property-type">String</span>
    </dt>
    <dd><p>Specifies Uniform Resource Identifier (URI) of the integration endpoint.</p>
<p>For HTTP or HTTP_PROXY integrations, the URI must be a fully formed, encoded HTTP(S) URL
according to the RFC-3986 specification, for either standard integration, where
connectionType is not VPC_LINK, or private integration, where connectionType is VPC_LINK. For
a private HTTP integration, the URI is not used for routing.</p>
<p>For AWS or AWS_PROXY integrations, the URI is of the form
arn:aws:apigateway:{region}:{subdomain.service|service}:path|action/{service_api}. Here,
{Region} is the API Gateway region (e.g., us-east-1); {service} is the name of the integrated
AWS service (e.g., s3); and {subdomain} is a designated subdomain supported by certain AWS
service for fast host-name lookup. action can be used for an AWS service action-based API,
using an Action={name}&amp;{p1}={v1}&amp;p2={v2}... query string. The ensuing {service_api} refers to
a supported action {name} plus any required input parameters. Alternatively, path can be used
for an AWS service path-based API. The ensuing service_api refers to the path to an AWS
service resource, including the region of the integrated AWS service, if applicable. For
example, for integration with the S3 API of GetObject, the uri can be either
arn:aws:apigateway:us-west-2:s3:action/GetObject&amp;Bucket={bucket}&amp;Key={key} or
arn:aws:apigateway:us-west-2:s3:path/{bucket}/{key}.</p>
</dd></dl>
</pulumi-choosable>
</div>


<h2 id="package-details">Package Details</h2>
<dl class="package-details">
	<dt>Repository</dt>
	<dd><a href="https://github.com/pulumi/pulumi-aws-apigateway">AWS API Gateway pulumi/pulumi-aws-apigateway</a></dd>
	<dt>License</dt>
	<dd>Apache-2.0</dd>
</dl>

